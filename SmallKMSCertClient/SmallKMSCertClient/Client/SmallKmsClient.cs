// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Cli.Commons.IO;
using Microsoft.Kiota.Cli.Commons;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using SmallKms.Client.V1;
using SmallKms.Client.V2;
using System.Collections.Generic;
using System.CommandLine;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System;
namespace SmallKms.Client {
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    public class SmallKmsClient : BaseCliRequestBuilder {
        /// <summary>
        /// Instantiates a new SmallKmsClient and sets the default values.
        /// </summary>
        public Command BuildRootCommand() {
            var command = new RootCommand();
            command.Description = "Instantiates a new SmallKmsClient and sets the default values.";
            command.AddCommand(BuildV1NavCommand());
            command.AddCommand(BuildV2NavCommand());
            return command;
        }
        /// <summary>
        /// The v1 property
        /// </summary>
        public Command BuildV1NavCommand() {
            var command = new Command("v1");
            command.Description = "The v1 property";
            var builder = new V1RequestBuilder(PathParameters);
            var nonExecCommands = new List<Command>();
            nonExecCommands.Add(builder.BuildDiagnosticsNavCommand());
            nonExecCommands.Add(builder.BuildMyNavCommand());
            var cmds = builder.BuildCommand();
            nonExecCommands.AddRange(cmds.Item2);
            foreach (var cmd in nonExecCommands.OrderBy(static c => c.Name, StringComparer.Ordinal))
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// The v2 property
        /// </summary>
        public Command BuildV2NavCommand() {
            var command = new Command("v2");
            command.Description = "The v2 property";
            var builder = new V2RequestBuilder(PathParameters);
            var nonExecCommands = new List<Command>();
            nonExecCommands.Add(builder.BuildNamespacesNavCommand());
            var cmds = builder.BuildCommand();
            nonExecCommands.AddRange(cmds.Item2);
            foreach (var cmd in nonExecCommands.OrderBy(static c => c.Name, StringComparer.Ordinal))
            {
                command.AddCommand(cmd);
            }
            return command;
        }
        /// <summary>
        /// Instantiates a new SmallKmsClient and sets the default values.
        /// </summary>
        public SmallKmsClient() : base("{+baseurl}", new Dictionary<string, object>()) {
        }
    }
}
