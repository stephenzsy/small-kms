// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using SmallKms.Client.V2.Group.Item.CertificateTemplates.Item;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace SmallKms.Client.V2.Group.Item.CertificateTemplates {
    /// <summary>
    /// Builds and executes requests for operations under \v2\group\{namespaceId}\certificate-templates
    /// </summary>
    public class CertificateTemplatesRequestBuilder : BaseRequestBuilder {
        /// <summary>Gets an item from the SmallKms.Client.v2.group.item.certificateTemplates.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        public WithTemplateItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("templateId", position);
            return new WithTemplateItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new CertificateTemplatesRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CertificateTemplatesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/group/{namespaceId}/certificate-templates", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new CertificateTemplatesRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public CertificateTemplatesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/group/{namespaceId}/certificate-templates", rawUrl) {
        }
    }
}
