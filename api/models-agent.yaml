openapi: 3.0.3
info:
  title: Cryptocat Agent Models
  version: 0.1.3
paths: {}
components:
  schemas:
    Agent:
      $ref: "models-shared.yaml#/components/schemas/Profile"
    CreateAgentRequest:
      type: object
      properties:
        appId:
          description: The Application ID (Client ID) of the agent
          type: string
          x-go-type-skip-optional-pointer: true
        displayName:
          description: The display name of the agent application
          type: string
          x-go-type-skip-optional-pointer: true
    AgentConfigBundle:
      type: object
      properties:
        id:
          type: string
        envGuards:
          type: array
          items:
            type: string
        identity:
          $ref: "#/components/schemas/AgentConfigRef"
        endpoint:
          $ref: "#/components/schemas/AgentConfigRef"
        expires:
          type: string
          format: date-time
      required:
        - id
        - envGuards
        - version
        - expires
    AgentConfigName:
      type: string
      enum:
        - identity
        - endpoint
      x-enum-varnames:
        - AgentConfigNameIdentity
        - AgentConfigNameEndpoint
    AgentConfigRef:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/AgentConfigName"
        updated:
          type: string
          format: date-time
        version:
          type: string
      required:
        - name
        - updated
        - version
    AgentConfig:
      oneOf:
        - $ref: "#/components/schemas/AgentConfigIdentity"
        - $ref: "#/components/schemas/AgentConfigEndpoint"
      discriminator:
        propertyName: name
        mapping:
          identity: "#/components/schemas/AgentConfigIdentity"
          endpoint: "#/components/schemas/AgentConfigEndpoint"
    CreateAgentConfigRequest:
      oneOf:
        - $ref: "#/components/schemas/AgentConfigIdentityFields"
        - $ref: "#/components/schemas/AgentConfigEndpointFields"
    AgentConfigIdentity:
      allOf:
        - $ref: "#/components/schemas/AgentConfigRef"
        - $ref: "#/components/schemas/AgentConfigIdentityFields"
        - x-go-type: agentConfigIdentityComposed
    AgentConfigIdentityFields:
      type: object
      properties:
        keyCredentialCertificatePolicyId:
          type: string
      required:
        - keyCredentialCertificatePolicyId
    AgentConfigEndpoint:
      allOf:
        - $ref: "#/components/schemas/AgentConfigRef"
        - $ref: "#/components/schemas/AgentConfigEndpointFields"
        - x-go-type: agentConfigEndpointComposed
    AgentConfigEndpointFields:
      type: object
      properties:
        tlsCertificatePolicyId:
          type: string
        jwtVerifyKeyPolicyIdentifier:
          type: string
        jwtVerifyKeyIdentifiers:
          type: array
          items:
            type: string
          x-go-type-skip-optional-pointer: true
      required:
        - tlsCertificatePolicyId
        - jwtVerifyKeyPolicyId
  responses:
    AgentResposne:
      description: Agent response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Agent"
    AgentConfigResponse:
      description: AgentConfig response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AgentConfig"
