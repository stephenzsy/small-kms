/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CertificateRef,
} from '../models';
import {
    CertificateRefFromJSON,
    CertificateRefToJSON,
} from '../models';

export interface ListCACertificatesRequest {
    xMsClientPrincipalName: string;
    xMsClientPrincipalId: string;
    xMsClientRoles: string;
}

/**
 * 
 */
export class AdminApi extends runtime.BaseAPI {

    /**
     * List CA Certificates
     */
    async listCACertificatesRaw(requestParameters: ListCACertificatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CertificateRef>>> {
        if (requestParameters.xMsClientPrincipalName === null || requestParameters.xMsClientPrincipalName === undefined) {
            throw new runtime.RequiredError('xMsClientPrincipalName','Required parameter requestParameters.xMsClientPrincipalName was null or undefined when calling listCACertificates.');
        }

        if (requestParameters.xMsClientPrincipalId === null || requestParameters.xMsClientPrincipalId === undefined) {
            throw new runtime.RequiredError('xMsClientPrincipalId','Required parameter requestParameters.xMsClientPrincipalId was null or undefined when calling listCACertificates.');
        }

        if (requestParameters.xMsClientRoles === null || requestParameters.xMsClientRoles === undefined) {
            throw new runtime.RequiredError('xMsClientRoles','Required parameter requestParameters.xMsClientRoles was null or undefined when calling listCACertificates.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xMsClientPrincipalName !== undefined && requestParameters.xMsClientPrincipalName !== null) {
            headerParameters['X-Ms-Client-Principal-Name'] = String(requestParameters.xMsClientPrincipalName);
        }

        if (requestParameters.xMsClientPrincipalId !== undefined && requestParameters.xMsClientPrincipalId !== null) {
            headerParameters['X-Ms-Client-Principal-Id'] = String(requestParameters.xMsClientPrincipalId);
        }

        if (requestParameters.xMsClientRoles !== undefined && requestParameters.xMsClientRoles !== null) {
            headerParameters['X-Ms-Client-Roles'] = String(requestParameters.xMsClientRoles);
        }

        const response = await this.request({
            path: `/admin/ca`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CertificateRefFromJSON));
    }

    /**
     * List CA Certificates
     */
    async listCACertificates(requestParameters: ListCACertificatesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CertificateRef>> {
        const response = await this.listCACertificatesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
