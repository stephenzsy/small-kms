/* tslint:disable */
/* eslint-disable */
/**
 * Cryptocat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JsonWebKey } from './JsonWebKey';
import {
    JsonWebKeyFromJSON,
    JsonWebKeyFromJSONTyped,
    JsonWebKeyToJSON,
} from './JsonWebKey';

/**
 * 
 * @export
 * @interface KeyFields
 */
export interface KeyFields {
    /**
     * 
     * @type {string}
     * @memberof KeyFields
     */
    identififier: string;
    /**
     * 
     * @type {number}
     * @memberof KeyFields
     */
    nbf?: number;
    /**
     * 
     * @type {JsonWebKey}
     * @memberof KeyFields
     */
    jwk: JsonWebKey;
    /**
     * Key Vault Secret ID
     * @type {string}
     * @memberof KeyFields
     */
    sid?: string;
}

/**
 * Check if a given object implements the KeyFields interface.
 */
export function instanceOfKeyFields(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "identififier" in value;
    isInstance = isInstance && "jwk" in value;

    return isInstance;
}

export function KeyFieldsFromJSON(json: any): KeyFields {
    return KeyFieldsFromJSONTyped(json, false);
}

export function KeyFieldsFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyFields {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'identififier': json['identififier'],
        'nbf': !exists(json, 'nbf') ? undefined : json['nbf'],
        'jwk': JsonWebKeyFromJSON(json['jwk']),
        'sid': !exists(json, 'sid') ? undefined : json['sid'],
    };
}

export function KeyFieldsToJSON(value?: KeyFields | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'identififier': value.identififier,
        'nbf': value.nbf,
        'jwk': JsonWebKeyToJSON(value.jwk),
        'sid': value.sid,
    };
}

