/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CertificateMetadata,
} from '../models';
import {
    CertificateMetadataFromJSON,
    CertificateMetadataToJSON,
} from '../models';

export interface AdminGetCAMetadataRequest {
    id: string;
}

/**
 * 
 */
export class AdminApi extends runtime.BaseAPI {

    /**
     * Get CA Metadata
     * Get CA Metadata
     */
    async adminGetCAMetadataRaw(requestParameters: AdminGetCAMetadataRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CertificateMetadata>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling adminGetCAMetadata.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/v1/admin/ca/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CertificateMetadataFromJSON(jsonValue));
    }

    /**
     * Get CA Metadata
     * Get CA Metadata
     */
    async adminGetCAMetadata(requestParameters: AdminGetCAMetadataRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CertificateMetadata> {
        const response = await this.adminGetCAMetadataRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
