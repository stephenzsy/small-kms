/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NamespaceType } from './NamespaceType';
import {
    NamespaceTypeFromJSON,
    NamespaceTypeFromJSONTyped,
    NamespaceTypeToJSON,
} from './NamespaceType';
import type { Ref } from './Ref';
import {
    RefFromJSON,
    RefFromJSONTyped,
    RefToJSON,
} from './Ref';

/**
 * 
 * @export
 * @interface NamespaceInfo
 */
export interface NamespaceInfo {
    /**
     * 
     * @type {Ref}
     * @memberof NamespaceInfo
     */
    ref: Ref;
    /**
     * 
     * @type {NamespaceType}
     * @memberof NamespaceInfo
     */
    objectType: NamespaceType;
}

/**
 * Check if a given object implements the NamespaceInfo interface.
 */
export function instanceOfNamespaceInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "ref" in value;
    isInstance = isInstance && "objectType" in value;

    return isInstance;
}

export function NamespaceInfoFromJSON(json: any): NamespaceInfo {
    return NamespaceInfoFromJSONTyped(json, false);
}

export function NamespaceInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): NamespaceInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ref': RefFromJSON(json['ref']),
        'objectType': NamespaceTypeFromJSON(json['objectType']),
    };
}

export function NamespaceInfoToJSON(value?: NamespaceInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ref': RefToJSON(value.ref),
        'objectType': NamespaceTypeToJSON(value.objectType),
    };
}

