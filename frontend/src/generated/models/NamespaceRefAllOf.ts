/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NamespaceType } from './NamespaceType';
import {
    NamespaceTypeFromJSON,
    NamespaceTypeFromJSONTyped,
    NamespaceTypeToJSON,
} from './NamespaceType';

/**
 * 
 * @export
 * @interface NamespaceRefAllOf
 */
export interface NamespaceRefAllOf {
    /**
     * 
     * @type {NamespaceType}
     * @memberof NamespaceRefAllOf
     */
    objectType: NamespaceType;
    /**
     * 
     * @type {string}
     * @memberof NamespaceRefAllOf
     */
    displayName: string;
}

/**
 * Check if a given object implements the NamespaceRefAllOf interface.
 */
export function instanceOfNamespaceRefAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "objectType" in value;
    isInstance = isInstance && "displayName" in value;

    return isInstance;
}

export function NamespaceRefAllOfFromJSON(json: any): NamespaceRefAllOf {
    return NamespaceRefAllOfFromJSONTyped(json, false);
}

export function NamespaceRefAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): NamespaceRefAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'objectType': NamespaceTypeFromJSON(json['objectType']),
        'displayName': json['displayName'],
    };
}

export function NamespaceRefAllOfToJSON(value?: NamespaceRefAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'objectType': NamespaceTypeToJSON(value.objectType),
        'displayName': value.displayName,
    };
}

