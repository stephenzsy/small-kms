/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CertificateIssurancePolicyParameters } from './CertificateIssurancePolicyParameters';
import {
    CertificateIssurancePolicyParametersFromJSON,
    CertificateIssurancePolicyParametersFromJSONTyped,
    CertificateIssurancePolicyParametersToJSON,
} from './CertificateIssurancePolicyParameters';
import type { CertificateRequestPolicyParameters } from './CertificateRequestPolicyParameters';
import {
    CertificateRequestPolicyParametersFromJSON,
    CertificateRequestPolicyParametersFromJSONTyped,
    CertificateRequestPolicyParametersToJSON,
} from './CertificateRequestPolicyParameters';
import type { PolicyType } from './PolicyType';
import {
    PolicyTypeFromJSON,
    PolicyTypeFromJSONTyped,
    PolicyTypeToJSON,
} from './PolicyType';

/**
 * 
 * @export
 * @interface PolicyParameters
 */
export interface PolicyParameters {
    /**
     * 
     * @type {PolicyType}
     * @memberof PolicyParameters
     */
    type: PolicyType;
    /**
     * 
     * @type {CertificateIssurancePolicyParameters}
     * @memberof PolicyParameters
     */
    certIssue?: CertificateIssurancePolicyParameters;
    /**
     * 
     * @type {CertificateRequestPolicyParameters}
     * @memberof PolicyParameters
     */
    certRequest?: CertificateRequestPolicyParameters;
}

/**
 * Check if a given object implements the PolicyParameters interface.
 */
export function instanceOfPolicyParameters(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function PolicyParametersFromJSON(json: any): PolicyParameters {
    return PolicyParametersFromJSONTyped(json, false);
}

export function PolicyParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): PolicyParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': PolicyTypeFromJSON(json['type']),
        'certIssue': !exists(json, 'certIssue') ? undefined : CertificateIssurancePolicyParametersFromJSON(json['certIssue']),
        'certRequest': !exists(json, 'certRequest') ? undefined : CertificateRequestPolicyParametersFromJSON(json['certRequest']),
    };
}

export function PolicyParametersToJSON(value?: PolicyParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': PolicyTypeToJSON(value.type),
        'certIssue': CertificateIssurancePolicyParametersToJSON(value.certIssue),
        'certRequest': CertificateRequestPolicyParametersToJSON(value.certRequest),
    };
}

