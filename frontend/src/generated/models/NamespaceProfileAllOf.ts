/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NamespaceRef } from './NamespaceRef';
import {
    NamespaceRefFromJSON,
    NamespaceRefFromJSONTyped,
    NamespaceRefToJSON,
} from './NamespaceRef';

/**
 * 
 * @export
 * @interface NamespaceProfileAllOf
 */
export interface NamespaceProfileAllOf {
    /**
     * 
     * @type {string}
     * @memberof NamespaceProfileAllOf
     */
    servicePrincipalType?: string;
    /**
     * 
     * @type {string}
     * @memberof NamespaceProfileAllOf
     */
    userPrincipalName?: string;
    /**
     * 
     * @type {string}
     * @memberof NamespaceProfileAllOf
     */
    deviceOwnership?: string;
    /**
     * \#microsoft.graph.device deviceId
     * @type {string}
     * @memberof NamespaceProfileAllOf
     */
    deviceId?: string;
    /**
     * \#microsoft.graph.device operatingSystem
     * @type {string}
     * @memberof NamespaceProfileAllOf
     */
    operatingSystem?: string;
    /**
     * \#microsoft.graph.device operatingSystemVersion
     * @type {string}
     * @memberof NamespaceProfileAllOf
     */
    operatingSystemVersion?: string;
    /**
     * \#microsoft.graph.device isCompliant
     * @type {boolean}
     * @memberof NamespaceProfileAllOf
     */
    isCompliant?: boolean;
    /**
     * 
     * @type {Array<NamespaceRef>}
     * @memberof NamespaceProfileAllOf
     */
    memberOf?: Array<NamespaceRef>;
}

/**
 * Check if a given object implements the NamespaceProfileAllOf interface.
 */
export function instanceOfNamespaceProfileAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NamespaceProfileAllOfFromJSON(json: any): NamespaceProfileAllOf {
    return NamespaceProfileAllOfFromJSONTyped(json, false);
}

export function NamespaceProfileAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): NamespaceProfileAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'servicePrincipalType': !exists(json, 'servicePrincipalType') ? undefined : json['servicePrincipalType'],
        'userPrincipalName': !exists(json, 'userPrincipalName') ? undefined : json['userPrincipalName'],
        'deviceOwnership': !exists(json, 'deviceOwnership') ? undefined : json['deviceOwnership'],
        'deviceId': !exists(json, 'deviceId') ? undefined : json['deviceId'],
        'operatingSystem': !exists(json, 'operatingSystem') ? undefined : json['operatingSystem'],
        'operatingSystemVersion': !exists(json, 'operatingSystemVersion') ? undefined : json['operatingSystemVersion'],
        'isCompliant': !exists(json, 'isCompliant') ? undefined : json['isCompliant'],
        'memberOf': !exists(json, 'memberOf') ? undefined : ((json['memberOf'] as Array<any>).map(NamespaceRefFromJSON)),
    };
}

export function NamespaceProfileAllOfToJSON(value?: NamespaceProfileAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'servicePrincipalType': value.servicePrincipalType,
        'userPrincipalName': value.userPrincipalName,
        'deviceOwnership': value.deviceOwnership,
        'deviceId': value.deviceId,
        'operatingSystem': value.operatingSystem,
        'operatingSystemVersion': value.operatingSystemVersion,
        'isCompliant': value.isCompliant,
        'memberOf': value.memberOf === undefined ? undefined : ((value.memberOf as Array<any>).map(NamespaceRefToJSON)),
    };
}

