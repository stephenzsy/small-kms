/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JsonWebKeyCurveName } from './JsonWebKeyCurveName';
import {
    JsonWebKeyCurveNameFromJSON,
    JsonWebKeyCurveNameFromJSONTyped,
    JsonWebKeyCurveNameToJSON,
} from './JsonWebKeyCurveName';
import type { JsonWebKeyOperation } from './JsonWebKeyOperation';
import {
    JsonWebKeyOperationFromJSON,
    JsonWebKeyOperationFromJSONTyped,
    JsonWebKeyOperationToJSON,
} from './JsonWebKeyOperation';
import type { JsonWebKeyType } from './JsonWebKeyType';
import {
    JsonWebKeyTypeFromJSON,
    JsonWebKeyTypeFromJSONTyped,
    JsonWebKeyTypeToJSON,
} from './JsonWebKeyType';

/**
 * 
 * @export
 * @interface JsonWebKey
 */
export interface JsonWebKey {
    /**
     * 
     * @type {JsonWebKeyType}
     * @memberof JsonWebKey
     */
    kty: JsonWebKeyType;
    /**
     * 
     * @type {string}
     * @memberof JsonWebKey
     */
    kid?: string;
    /**
     * 
     * @type {Array<JsonWebKeyOperation>}
     * @memberof JsonWebKey
     */
    keyOps?: Array<JsonWebKeyOperation>;
    /**
     * 
     * @type {JsonWebKeyCurveName}
     * @memberof JsonWebKey
     */
    crv?: JsonWebKeyCurveName;
    /**
     * 
     * @type {string}
     * @memberof JsonWebKey
     */
    n?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonWebKey
     */
    e?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonWebKey
     */
    x?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonWebKey
     */
    y?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonWebKey
     */
    x5u?: string;
    /**
     * Base64 encoded certificate chain
     * @type {Array<string>}
     * @memberof JsonWebKey
     */
    x5c?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof JsonWebKey
     */
    x5t?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonWebKey
     */
    x5tS256?: string;
}

/**
 * Check if a given object implements the JsonWebKey interface.
 */
export function instanceOfJsonWebKey(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kty" in value;

    return isInstance;
}

export function JsonWebKeyFromJSON(json: any): JsonWebKey {
    return JsonWebKeyFromJSONTyped(json, false);
}

export function JsonWebKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): JsonWebKey {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kty': JsonWebKeyTypeFromJSON(json['kty']),
        'kid': !exists(json, 'kid') ? undefined : json['kid'],
        'keyOps': !exists(json, 'key_ops') ? undefined : ((json['key_ops'] as Array<any>).map(JsonWebKeyOperationFromJSON)),
        'crv': !exists(json, 'crv') ? undefined : JsonWebKeyCurveNameFromJSON(json['crv']),
        'n': !exists(json, 'n') ? undefined : json['n'],
        'e': !exists(json, 'e') ? undefined : json['e'],
        'x': !exists(json, 'x') ? undefined : json['x'],
        'y': !exists(json, 'y') ? undefined : json['y'],
        'x5u': !exists(json, 'x5u') ? undefined : json['x5u'],
        'x5c': !exists(json, 'x5c') ? undefined : json['x5c'],
        'x5t': !exists(json, 'x5t') ? undefined : json['x5t'],
        'x5tS256': !exists(json, 'x5t#S256') ? undefined : json['x5t#S256'],
    };
}

export function JsonWebKeyToJSON(value?: JsonWebKey | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kty': JsonWebKeyTypeToJSON(value.kty),
        'kid': value.kid,
        'key_ops': value.keyOps === undefined ? undefined : ((value.keyOps as Array<any>).map(JsonWebKeyOperationToJSON)),
        'crv': JsonWebKeyCurveNameToJSON(value.crv),
        'n': value.n,
        'e': value.e,
        'x': value.x,
        'y': value.y,
        'x5u': value.x5u,
        'x5c': value.x5c,
        'x5t': value.x5t,
        'x5t#S256': value.x5tS256,
    };
}

