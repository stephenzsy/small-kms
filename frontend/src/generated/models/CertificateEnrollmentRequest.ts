/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    CertificateEnrollmentRequestDeviceLinkedServicePrincipal,
    instanceOfCertificateEnrollmentRequestDeviceLinkedServicePrincipal,
    CertificateEnrollmentRequestDeviceLinkedServicePrincipalFromJSON,
    CertificateEnrollmentRequestDeviceLinkedServicePrincipalFromJSONTyped,
    CertificateEnrollmentRequestDeviceLinkedServicePrincipalToJSON,
} from './CertificateEnrollmentRequestDeviceLinkedServicePrincipal';

/**
 * @type CertificateEnrollmentRequest
 * 
 * @export
 */
export type CertificateEnrollmentRequest = { type: 'device-linked-service-principal' } & CertificateEnrollmentRequestDeviceLinkedServicePrincipal;

export function CertificateEnrollmentRequestFromJSON(json: any): CertificateEnrollmentRequest {
    return CertificateEnrollmentRequestFromJSONTyped(json, false);
}

export function CertificateEnrollmentRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CertificateEnrollmentRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'device-linked-service-principal':
            return {...CertificateEnrollmentRequestDeviceLinkedServicePrincipalFromJSONTyped(json, true), type: 'device-linked-service-principal'};
        default:
            throw new Error(`No variant of CertificateEnrollmentRequest exists with 'type=${json['type']}'`);
    }
}

export function CertificateEnrollmentRequestToJSON(value?: CertificateEnrollmentRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'device-linked-service-principal':
            return CertificateEnrollmentRequestDeviceLinkedServicePrincipalToJSON(value);
        default:
            throw new Error(`No variant of CertificateEnrollmentRequest exists with 'type=${value['type']}'`);
    }

}

