/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AgentConfigurationAgentActiveServerReplyState } from './AgentConfigurationAgentActiveServerReplyState';
import {
    AgentConfigurationAgentActiveServerReplyStateFromJSON,
    AgentConfigurationAgentActiveServerReplyStateFromJSONTyped,
    AgentConfigurationAgentActiveServerReplyStateToJSON,
} from './AgentConfigurationAgentActiveServerReplyState';

/**
 * 
 * @export
 * @interface AgentProxyEndpoint
 */
export interface AgentProxyEndpoint {
    /**
     * 
     * @type {string}
     * @memberof AgentProxyEndpoint
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof AgentProxyEndpoint
     */
    ipUrl: string;
    /**
     * 
     * @type {AgentConfigurationAgentActiveServerReplyState}
     * @memberof AgentProxyEndpoint
     */
    state: AgentConfigurationAgentActiveServerReplyState;
}

/**
 * Check if a given object implements the AgentProxyEndpoint interface.
 */
export function instanceOfAgentProxyEndpoint(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "ipUrl" in value;
    isInstance = isInstance && "state" in value;

    return isInstance;
}

export function AgentProxyEndpointFromJSON(json: any): AgentProxyEndpoint {
    return AgentProxyEndpointFromJSONTyped(json, false);
}

export function AgentProxyEndpointFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentProxyEndpoint {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': json['url'],
        'ipUrl': json['ipUrl'],
        'state': AgentConfigurationAgentActiveServerReplyStateFromJSON(json['state']),
    };
}

export function AgentProxyEndpointToJSON(value?: AgentProxyEndpoint | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'ipUrl': value.ipUrl,
        'state': AgentConfigurationAgentActiveServerReplyStateToJSON(value.state),
    };
}

