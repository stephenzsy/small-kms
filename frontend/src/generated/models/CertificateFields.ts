/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JsonWebKeySignatureAlgorithm } from './JsonWebKeySignatureAlgorithm';
import {
    JsonWebKeySignatureAlgorithmFromJSON,
    JsonWebKeySignatureAlgorithmFromJSONTyped,
    JsonWebKeySignatureAlgorithmToJSON,
} from './JsonWebKeySignatureAlgorithm';

/**
 * 
 * @export
 * @interface CertificateFields
 */
export interface CertificateFields {
    /**
     * 
     * @type {JsonWebKeySignatureAlgorithm}
     * @memberof CertificateFields
     */
    alg: JsonWebKeySignatureAlgorithm;
    /**
     * 
     * @type {string}
     * @memberof CertificateFields
     */
    cid?: string;
    /**
     * 
     * @type {string}
     * @memberof CertificateFields
     */
    kid?: string;
    /**
     * 
     * @type {string}
     * @memberof CertificateFields
     */
    sid?: string;
    /**
     * Base64 encoded certificate chain
     * @type {Array<string>}
     * @memberof CertificateFields
     */
    x5c?: Array<string>;
    /**
     * SHA-256 fingerprint of the certificate
     * @type {string}
     * @memberof CertificateFields
     */
    x5tS256: string;
}

/**
 * Check if a given object implements the CertificateFields interface.
 */
export function instanceOfCertificateFields(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "alg" in value;
    isInstance = isInstance && "x5tS256" in value;

    return isInstance;
}

export function CertificateFieldsFromJSON(json: any): CertificateFields {
    return CertificateFieldsFromJSONTyped(json, false);
}

export function CertificateFieldsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CertificateFields {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alg': JsonWebKeySignatureAlgorithmFromJSON(json['alg']),
        'cid': !exists(json, 'cid') ? undefined : json['cid'],
        'kid': !exists(json, 'kid') ? undefined : json['kid'],
        'sid': !exists(json, 'sid') ? undefined : json['sid'],
        'x5c': !exists(json, 'x5c') ? undefined : json['x5c'],
        'x5tS256': json['x5t#S256'],
    };
}

export function CertificateFieldsToJSON(value?: CertificateFields | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alg': JsonWebKeySignatureAlgorithmToJSON(value.alg),
        'cid': value.cid,
        'kid': value.kid,
        'sid': value.sid,
        'x5c': value.x5c,
        'x5t#S256': value.x5tS256,
    };
}

