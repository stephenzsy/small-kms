/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AgentConfigRadiusClientConfig } from './AgentConfigRadiusClientConfig';
import {
    AgentConfigRadiusClientConfigFromJSON,
    AgentConfigRadiusClientConfigFromJSONTyped,
    AgentConfigRadiusClientConfigToJSON,
} from './AgentConfigRadiusClientConfig';

/**
 * 
 * @export
 * @interface AgentConfigRadius
 */
export interface AgentConfigRadius {
    /**
     * 
     * @type {string}
     * @memberof AgentConfigRadius
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof AgentConfigRadius
     */
    updated: Date;
    /**
     * 
     * @type {Date}
     * @memberof AgentConfigRadius
     */
    deleted?: Date;
    /**
     * 
     * @type {string}
     * @memberof AgentConfigRadius
     */
    updatedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentConfigRadius
     */
    version: string;
    /**
     * 
     * @type {Date}
     * @memberof AgentConfigRadius
     */
    refreshAfter: Date;
    /**
     * 
     * @type {string}
     * @memberof AgentConfigRadius
     */
    azureAcrImageRef?: string;
    /**
     * 
     * @type {Array<AgentConfigRadiusClientConfig>}
     * @memberof AgentConfigRadius
     */
    clients?: Array<AgentConfigRadiusClientConfig>;
}

/**
 * Check if a given object implements the AgentConfigRadius interface.
 */
export function instanceOfAgentConfigRadius(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "updated" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "refreshAfter" in value;

    return isInstance;
}

export function AgentConfigRadiusFromJSON(json: any): AgentConfigRadius {
    return AgentConfigRadiusFromJSONTyped(json, false);
}

export function AgentConfigRadiusFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentConfigRadius {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'updated': (new Date(json['updated'])),
        'deleted': !exists(json, 'deleted') ? undefined : (new Date(json['deleted'])),
        'updatedBy': !exists(json, 'updatedBy') ? undefined : json['updatedBy'],
        'version': json['version'],
        'refreshAfter': (new Date(json['refreshAfter'])),
        'azureAcrImageRef': !exists(json, 'azureAcrImageRef') ? undefined : json['azureAcrImageRef'],
        'clients': !exists(json, 'clients') ? undefined : ((json['clients'] as Array<any>).map(AgentConfigRadiusClientConfigFromJSON)),
    };
}

export function AgentConfigRadiusToJSON(value?: AgentConfigRadius | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'updated': (value.updated.toISOString()),
        'deleted': value.deleted === undefined ? undefined : (value.deleted.toISOString()),
        'updatedBy': value.updatedBy,
        'version': value.version,
        'refreshAfter': (value.refreshAfter.toISOString()),
        'azureAcrImageRef': value.azureAcrImageRef,
        'clients': value.clients === undefined ? undefined : ((value.clients as Array<any>).map(AgentConfigRadiusClientConfigToJSON)),
    };
}

