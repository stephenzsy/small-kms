/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AgentConfigName } from './AgentConfigName';
import {
    AgentConfigNameFromJSON,
    AgentConfigNameFromJSONTyped,
    AgentConfigNameToJSON,
} from './AgentConfigName';
import type { AgentConfigurationAgentActiveServerEndpointUrls } from './AgentConfigurationAgentActiveServerEndpointUrls';
import {
    AgentConfigurationAgentActiveServerEndpointUrlsFromJSON,
    AgentConfigurationAgentActiveServerEndpointUrlsFromJSONTyped,
    AgentConfigurationAgentActiveServerEndpointUrlsToJSON,
} from './AgentConfigurationAgentActiveServerEndpointUrls';
import type { AgentConfigurationAgentActiveServerReply } from './AgentConfigurationAgentActiveServerReply';
import {
    AgentConfigurationAgentActiveServerReplyFromJSON,
    AgentConfigurationAgentActiveServerReplyFromJSONTyped,
    AgentConfigurationAgentActiveServerReplyToJSON,
} from './AgentConfigurationAgentActiveServerReply';

/**
 * 
 * @export
 * @interface AgentConfigurationAgentActiveServer
 */
export interface AgentConfigurationAgentActiveServer {
    /**
     * 
     * @type {AgentConfigName}
     * @memberof AgentConfigurationAgentActiveServer
     */
    name: AgentConfigName;
    /**
     * 
     * @type {AgentConfigurationAgentActiveServerEndpointUrls}
     * @memberof AgentConfigurationAgentActiveServer
     */
    endpointUrls?: AgentConfigurationAgentActiveServerEndpointUrls;
    /**
     * 
     * @type {string}
     * @memberof AgentConfigurationAgentActiveServer
     */
    serverCertificateTemplateId?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentConfigurationAgentActiveServer
     */
    authorizedCertificateTemplateId?: string;
    /**
     * 
     * @type {string}
     * @memberof AgentConfigurationAgentActiveServer
     */
    serverCertificateId?: string;
    /**
     * (Read-only)
     * @type {Array<string>}
     * @memberof AgentConfigurationAgentActiveServer
     */
    authorizedCertificateIds?: Array<string>;
    /**
     * 
     * @type {AgentConfigurationAgentActiveServerReply}
     * @memberof AgentConfigurationAgentActiveServer
     */
    reply?: AgentConfigurationAgentActiveServerReply;
}

/**
 * Check if a given object implements the AgentConfigurationAgentActiveServer interface.
 */
export function instanceOfAgentConfigurationAgentActiveServer(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function AgentConfigurationAgentActiveServerFromJSON(json: any): AgentConfigurationAgentActiveServer {
    return AgentConfigurationAgentActiveServerFromJSONTyped(json, false);
}

export function AgentConfigurationAgentActiveServerFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentConfigurationAgentActiveServer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': AgentConfigNameFromJSON(json['name']),
        'endpointUrls': !exists(json, 'endpointUrls') ? undefined : AgentConfigurationAgentActiveServerEndpointUrlsFromJSON(json['endpointUrls']),
        'serverCertificateTemplateId': !exists(json, 'serverCertificateTemplateId') ? undefined : json['serverCertificateTemplateId'],
        'authorizedCertificateTemplateId': !exists(json, 'authorizedCertificateTemplateId') ? undefined : json['authorizedCertificateTemplateId'],
        'serverCertificateId': !exists(json, 'serverCertificateId') ? undefined : json['serverCertificateId'],
        'authorizedCertificateIds': !exists(json, 'authorizedCertificateIds') ? undefined : json['authorizedCertificateIds'],
        'reply': !exists(json, 'reply') ? undefined : AgentConfigurationAgentActiveServerReplyFromJSON(json['reply']),
    };
}

export function AgentConfigurationAgentActiveServerToJSON(value?: AgentConfigurationAgentActiveServer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': AgentConfigNameToJSON(value.name),
        'endpointUrls': AgentConfigurationAgentActiveServerEndpointUrlsToJSON(value.endpointUrls),
        'serverCertificateTemplateId': value.serverCertificateTemplateId,
        'authorizedCertificateTemplateId': value.authorizedCertificateTemplateId,
        'serverCertificateId': value.serverCertificateId,
        'authorizedCertificateIds': value.authorizedCertificateIds,
        'reply': AgentConfigurationAgentActiveServerReplyToJSON(value.reply),
    };
}

