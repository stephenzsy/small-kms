/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RadiusServerListenConfig } from './RadiusServerListenConfig';
import {
    RadiusServerListenConfigFromJSON,
    RadiusServerListenConfigFromJSONTyped,
    RadiusServerListenConfigToJSON,
} from './RadiusServerListenConfig';

/**
 * 
 * @export
 * @interface RadiusServerConfig
 */
export interface RadiusServerConfig {
    /**
     * 
     * @type {string}
     * @memberof RadiusServerConfig
     */
    name: string;
    /**
     * 
     * @type {Array<RadiusServerListenConfig>}
     * @memberof RadiusServerConfig
     */
    listeners: Array<RadiusServerListenConfig>;
}

/**
 * Check if a given object implements the RadiusServerConfig interface.
 */
export function instanceOfRadiusServerConfig(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "listeners" in value;

    return isInstance;
}

export function RadiusServerConfigFromJSON(json: any): RadiusServerConfig {
    return RadiusServerConfigFromJSONTyped(json, false);
}

export function RadiusServerConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): RadiusServerConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'listeners': ((json['listeners'] as Array<any>).map(RadiusServerListenConfigFromJSON)),
    };
}

export function RadiusServerConfigToJSON(value?: RadiusServerConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'listeners': ((value.listeners as Array<any>).map(RadiusServerListenConfigToJSON)),
    };
}

