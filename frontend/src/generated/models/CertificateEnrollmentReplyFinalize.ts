/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JwkProperties } from './JwkProperties';
import {
    JwkPropertiesFromJSON,
    JwkPropertiesFromJSONTyped,
    JwkPropertiesToJSON,
} from './JwkProperties';

/**
 * 
 * @export
 * @interface CertificateEnrollmentReplyFinalize
 */
export interface CertificateEnrollmentReplyFinalize {
    /**
     * header section of the certificate claims, in JWT format, base64url encoded
     * @type {string}
     * @memberof CertificateEnrollmentReplyFinalize
     */
    jwtHeader: string;
    /**
     * signature section of the jwt, serves as proof of confirmation finalize the enrollment and being issued a certificate, with header and signature, signed with the key pair with the public key in the same request
     * @type {string}
     * @memberof CertificateEnrollmentReplyFinalize
     */
    jwtSignature: string;
    /**
     * 
     * @type {JwkProperties}
     * @memberof CertificateEnrollmentReplyFinalize
     */
    publicKey: JwkProperties;
}

/**
 * Check if a given object implements the CertificateEnrollmentReplyFinalize interface.
 */
export function instanceOfCertificateEnrollmentReplyFinalize(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "jwtHeader" in value;
    isInstance = isInstance && "jwtSignature" in value;
    isInstance = isInstance && "publicKey" in value;

    return isInstance;
}

export function CertificateEnrollmentReplyFinalizeFromJSON(json: any): CertificateEnrollmentReplyFinalize {
    return CertificateEnrollmentReplyFinalizeFromJSONTyped(json, false);
}

export function CertificateEnrollmentReplyFinalizeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CertificateEnrollmentReplyFinalize {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'jwtHeader': json['jwtHeader'],
        'jwtSignature': json['jwtSignature'],
        'publicKey': JwkPropertiesFromJSON(json['publicKey']),
    };
}

export function CertificateEnrollmentReplyFinalizeToJSON(value?: CertificateEnrollmentReplyFinalize | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'jwtHeader': value.jwtHeader,
        'jwtSignature': value.jwtSignature,
        'publicKey': JwkPropertiesToJSON(value.publicKey),
    };
}

