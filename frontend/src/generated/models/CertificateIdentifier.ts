/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CertificateIdentifierType } from './CertificateIdentifierType';
import {
    CertificateIdentifierTypeFromJSON,
    CertificateIdentifierTypeFromJSONTyped,
    CertificateIdentifierTypeToJSON,
} from './CertificateIdentifierType';

/**
 * 
 * @export
 * @interface CertificateIdentifier
 */
export interface CertificateIdentifier {
    /**
     * ID of the issuer namespace
     * @type {string}
     * @memberof CertificateIdentifier
     */
    id: string;
    /**
     * 
     * @type {CertificateIdentifierType}
     * @memberof CertificateIdentifier
     */
    type?: CertificateIdentifierType;
}

/**
 * Check if a given object implements the CertificateIdentifier interface.
 */
export function instanceOfCertificateIdentifier(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function CertificateIdentifierFromJSON(json: any): CertificateIdentifier {
    return CertificateIdentifierFromJSONTyped(json, false);
}

export function CertificateIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): CertificateIdentifier {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': !exists(json, 'type') ? undefined : CertificateIdentifierTypeFromJSON(json['type']),
    };
}

export function CertificateIdentifierToJSON(value?: CertificateIdentifier | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': CertificateIdentifierTypeToJSON(value.type),
    };
}

