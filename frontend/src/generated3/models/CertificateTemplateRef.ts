/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API Shared
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ResourceMetadata } from './ResourceMetadata';
import {
    ResourceMetadataFromJSON,
    ResourceMetadataFromJSONTyped,
    ResourceMetadataToJSON,
} from './ResourceMetadata';

/**
 * 
 * @export
 * @interface CertificateTemplateRef
 */
export interface CertificateTemplateRef {
    /**
     * Identifier of the resource
     * @type {string}
     * @memberof CertificateTemplateRef
     */
    id: string;
    /**
     * Common name
     * @type {string}
     * @memberof CertificateTemplateRef
     */
    subjectCommonName: string;
    /**
     * 
     * @type {ResourceMetadata}
     * @memberof CertificateTemplateRef
     */
    metadata?: ResourceMetadata;
}

/**
 * Check if a given object implements the CertificateTemplateRef interface.
 */
export function instanceOfCertificateTemplateRef(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "subjectCommonName" in value;

    return isInstance;
}

export function CertificateTemplateRefFromJSON(json: any): CertificateTemplateRef {
    return CertificateTemplateRefFromJSONTyped(json, false);
}

export function CertificateTemplateRefFromJSONTyped(json: any, ignoreDiscriminator: boolean): CertificateTemplateRef {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'subjectCommonName': json['subjectCommonName'],
        'metadata': !exists(json, 'metadata') ? undefined : ResourceMetadataFromJSON(json['metadata']),
    };
}

export function CertificateTemplateRefToJSON(value?: CertificateTemplateRef | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'subjectCommonName': value.subjectCommonName,
        'metadata': ResourceMetadataToJSON(value.metadata),
    };
}

