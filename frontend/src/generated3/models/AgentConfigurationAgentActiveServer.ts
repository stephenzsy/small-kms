/* tslint:disable */
/* eslint-disable */
/**
 * Small KMS Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AgentConfigName } from './AgentConfigName';
import {
    AgentConfigNameFromJSON,
    AgentConfigNameFromJSONTyped,
    AgentConfigNameToJSON,
} from './AgentConfigName';

/**
 * 
 * @export
 * @interface AgentConfigurationAgentActiveServer
 */
export interface AgentConfigurationAgentActiveServer {
    /**
     * 
     * @type {AgentConfigName}
     * @memberof AgentConfigurationAgentActiveServer
     */
    name: AgentConfigName;
    /**
     * 
     * @type {string}
     * @memberof AgentConfigurationAgentActiveServer
     */
    serverCertificate?: string;
}

/**
 * Check if a given object implements the AgentConfigurationAgentActiveServer interface.
 */
export function instanceOfAgentConfigurationAgentActiveServer(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function AgentConfigurationAgentActiveServerFromJSON(json: any): AgentConfigurationAgentActiveServer {
    return AgentConfigurationAgentActiveServerFromJSONTyped(json, false);
}

export function AgentConfigurationAgentActiveServerFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentConfigurationAgentActiveServer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': AgentConfigNameFromJSON(json['name']),
        'serverCertificate': !exists(json, 'serverCertificate') ? undefined : json['serverCertificate'],
    };
}

export function AgentConfigurationAgentActiveServerToJSON(value?: AgentConfigurationAgentActiveServer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': AgentConfigNameToJSON(value.name),
        'serverCertificate': value.serverCertificate,
    };
}

