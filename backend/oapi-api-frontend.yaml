openapi: 3.0.3
info:
  title: Small KMS Admin API
  version: 0.1.1
servers:
  - url: https://example.com
    description: Local server
security:
  - BearerAuth: []
paths:
  /v1/diagnostics:
    $ref: "oapi-base.yaml#/paths/~1v1~1diagnostics"
  /v1/managed-app:
    $ref: "oapi-managed-app.yaml#/paths/~1v1~1managed-app"
  /v1/managed-app/{managedAppId}:
    $ref: "oapi-managed-app.yaml#/paths/~1v1~1managed-app~1{managedAppId}"
  /v1/system-app/{systemAppName}:
    $ref: "oapi-managed-app.yaml#/paths/~1v1~1system-app~1{systemAppName}"
  /v1/{namespaceKind}/{namespaceIdentifier}/agent-config/server:
    $ref: "oapi-managed-app.yaml#/paths/~1v1~1{namespaceKind}~1{namespaceIdentifier}~1agent-config~1server"
  /v1/{namespaceKind}/{namespaceIdentifier}/agent-config/server/role-assignments:
    $ref: "oapi-managed-app.yaml#/paths/~1v1~1{namespaceKind}~1{namespaceIdentifier}~1agent-config~1server~1role-assignments"
  /v1/profile/{profileResourceKind}:
    $ref: "oapi-profile.yaml#/paths/~1v1~1profile~1{profileResourceKind}"
  /v1/profile/{profileResourceKind}/{namespaceIdentifier}:
    $ref: "oapi-profile.yaml#/paths/~1v1~1profile~1{profileResourceKind}~1{namespaceIdentifier}"
  /v1/profile/{profileResourceKind}/{namespaceIdentifier}/import:
    $ref: "oapi-profile.yaml#/paths/~1v1~1profile~1{profileResourceKind}~1{namespaceIdentifier}~1import"
  /v1/{namespaceKind}/{namespaceIdentifier}/cert:
    $ref: "oapi-cert.yaml#/paths/~1v1~1{namespaceKind}~1{namespaceIdentifier}~1cert"
  /v1/{namespaceKind}/{namespaceIdentifier}/cert/{resourceIdentifier}:
    $ref: "oapi-cert.yaml#/paths/~1v1~1{namespaceKind}~1{namespaceIdentifier}~1cert~1{resourceIdentifier}"
  /v1/{namespaceKind}/{namespaceIdentifier}/cert-policy:
    $ref: "oapi-cert.yaml#/paths/~1v1~1{namespaceKind}~1{namespaceIdentifier}~1cert-policy"
  /v1/{namespaceKind}/{namespaceIdentifier}/cert-policy/{resourceIdentifier}:
    $ref: "oapi-cert.yaml#/paths/~1v1~1{namespaceKind}~1{namespaceIdentifier}~1cert-policy~1{resourceIdentifier}"
  /v1/{namespaceKind}/{namespaceIdentifier}/cert-policy/{resourceIdentifier}/create-cert:
    $ref: "oapi-cert.yaml#/paths/~1v1~1{namespaceKind}~1{namespaceIdentifier}~1cert-policy~1{resourceIdentifier}~1create-cert"
  /v1/{namespaceKind}/{namespaceIdentifier}/cert-rule/issuer:
    $ref: "oapi-cert.yaml#/paths/~1v1~1{namespaceKind}~1{namespaceIdentifier}~1cert-rule~1issuer"
  /v1/{namespaceKind}/{namespaceIdentifier}/cert-rule/ms-entra-client-credential:
    $ref: "oapi-cert.yaml#/paths/~1v1~1{namespaceKind}~1{namespaceIdentifier}~1cert-rule~1ms-entra-client-credential"
  /v1/{namespaceKind}/{namespaceIdentifier}/cert-policy/{resourceIdentifier}/keyvault-role-assignments/{resourceCategory}:
    $ref: "oapi-cert.yaml#/paths/~1v1~1{namespaceKind}~1{namespaceIdentifier}~1cert-policy~1{resourceIdentifier}~1keyvault-role-assignments~1{resourceCategory}"
  /v3/{namespaceKindLegacy}/{namespaceId}/agent-callback/{configName}:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindLegacyParameter"
      - $ref: "#/components/parameters/NamespaceIdParameter"
      - $ref: "#/components/parameters/AgentConfigNameParameter"
    post:
      tags:
        - admin
        - agentclient
      operationId: AgentCallback
      requestBody:
        content:
          application/json:
            schema:
              $ref: "oapi-shared.yaml#/components/schemas/AgentConfiguration"
        required: true
      responses:
        204:
          description: No content
  /v3/{namespaceKindLegacy}/{namespaceId}/agent-config/{configName}:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindLegacyParameter"
      - $ref: "#/components/parameters/NamespaceIdParameter"
      - $ref: "#/components/parameters/AgentConfigNameParameter"
    get:
      tags:
        - admin
        - agentclient
      summary: Get agent autoconfig
      operationId: GetAgentConfiguration
      parameters:
        - in: header
          name: "X-Smallkms-If-Version-Not-Match"
          schema:
            type: string
          required: false
        - in: query
          name: refreshToken
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/AgentConfigurationResponse"
        204:
          description: No content
    put:
      tags:
        - admin
      summary: Get agent autoconfig
      operationId: PutAgentConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "oapi-shared.yaml#/components/schemas/AgentConfigurationParameters"
        required: true
      responses:
        200:
          $ref: "#/components/responses/AgentConfigurationResponse"
  /v3/servicePrincipal/{namespaceId}/agent-proxy:
    parameters:
      - $ref: "#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - admin
      description: Get agent proxy information
      operationId: GetAgentProxyInfo
      responses:
        200:
          description: Agent proxy info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentProxyInfo"
  /v3/servicePrincipal/{namespaceId}/agent-proxy/docker/info:
    parameters:
      - $ref: "#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - agent
        - admin
        - agentproxyclient
      description: Get docker info
      operationId: GetDockerInfo
      responses:
        200:
          description: DockerInfo
          content:
            application/json:
              schema:
                $ref: "oapi-shared.yaml#/components/schemas/DockerInfo"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AgentProxyEndpoint:
      type: object
      properties:
        url:
          type: string
        ipUrl:
          type: string
        state:
          $ref: "oapi-shared.yaml#/components/schemas/AgentConfigurationAgentActiveServerReplyState"
      required:
        - url
        - ipUrl
        - state
    AgentProxyInfo:
      type: object
      properties:
        primary:
          $ref: "#/components/schemas/AgentProxyEndpoint"
        secondary:
          $ref: "#/components/schemas/AgentProxyEndpoint"
    CertificateLifetimeTrigger:
      type: object
      properties:
        days_before_expiry:
          x-go-name: DaysBeforeExpiry
          type: integer
          format: int32
        lifetime_percentage:
          x-go-name: LifetimePercentage
          type: integer
          format: int32
    CertificateTemplateRefFields:
      type: object
      properties:
        subjectCommonName:
          description: Common name
          type: string
        linkTo:
          $ref: "oapi-shared.yaml#/components/schemas/ResourceLocator"
      required:
        - subjectCommonName
    LinkedCertificateTemplateUsage:
      type: string
      enum:
        - cliant-authorization
      x-enum-varnames:
        - LinkedCertificateTemplateUsageClientAuthorization
    CreateLinkedCertificateTemplateParameters:
      type: object
      properties:
        targetTemplate:
          $ref: "oapi-shared.yaml#/components/schemas/ResourceLocator"
        usage:
          $ref: "#/components/schemas/LinkedCertificateTemplateUsage"
      required:
        - targetTemplate
        - usage
    AgentHostRole:
      type: string
      enum:
        - radiusServer
      x-enum-varnames:
        - AgentHostRoleRadiusServer
  parameters:
    AgentConfigNameParameter:
      in: path
      name: configName
      schema:
        $ref: "oapi-shared.yaml#/components/schemas/AgentConfigName"
      required: true
    NamespaceKindLegacyParameter:
      in: path
      name: namespaceKindLegacy
      schema:
        $ref: "oapi-shared.yaml#/components/schemas/NamespaceKind"
      required: true
    NamespaceIdParameter:
      in: path
      name: namespaceId
      schema:
        $ref: "oapi-shared.yaml#/components/schemas/Identifier"
      required: true
    CertificateIdPathParameter:
      in: path
      name: certificateId
      schema:
        $ref: "oapi-shared.yaml#/components/schemas/Identifier"
      required: true
    CertificateTemplateIdentifierParameter:
      in: path
      name: templateId
      schema:
        $ref: "oapi-shared.yaml#/components/schemas/Identifier"
      required: true
    IncludeCertificateParameter:
      in: query
      name: "includeCertificate"
      schema:
        type: boolean
      required: false
  responses:
    AgentConfigurationResponse:
      description: Agent autoconfig response
      content:
        application/json:
          schema:
            $ref: "oapi-shared.yaml#/components/schemas/AgentConfiguration"
