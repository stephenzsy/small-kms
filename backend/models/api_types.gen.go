// Package models provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package models

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
	externalRef0 "github.com/stephenzsy/small-kms/backend/shared"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for LinkedCertificateTemplateUsage.
const (
	LinkedCertificateTemplateUsageClientAuthorization LinkedCertificateTemplateUsage = "cliant-authorization"
)

// Defines values for PatchServiceConfigParamsConfigPath.
const (
	ServiceConfigPathAppRoleIds             PatchServiceConfigParamsConfigPath = "appRoleIds"
	ServiceConfigPathAzureContainerRegistry PatchServiceConfigParamsConfigPath = "azureContainerRegistry"
	ServiceConfigPathAzureSubscriptionId    PatchServiceConfigParamsConfigPath = "azureSubscriptionId"
	ServiceConfigPathKeyvaultArmResourceId  PatchServiceConfigParamsConfigPath = "keyvaultArmResourceId"
)

// AgentProxyEndpoint defines model for AgentProxyEndpoint.
type AgentProxyEndpoint struct {
	IpUrl string                                                     `json:"ipUrl"`
	State externalRef0.AgentConfigurationAgentActiveServerReplyState `json:"state"`
	Url   string                                                     `json:"url"`
}

// AgentProxyInfo defines model for AgentProxyInfo.
type AgentProxyInfo struct {
	Primary   *AgentProxyEndpoint `json:"primary,omitempty"`
	Secondary *AgentProxyEndpoint `json:"secondary,omitempty"`
}

// AzureRoleAssignment defines model for AzureRoleAssignment.
type AzureRoleAssignment struct {
	Id               *string `json:"id,omitempty"`
	Name             *string `json:"name,omitempty"`
	PrincipalId      *string `json:"principalId,omitempty"`
	RoleDefinitionId *string `json:"roleDefinitionId,omitempty"`
}

// CertificateLifetimeTrigger defines model for CertificateLifetimeTrigger.
type CertificateLifetimeTrigger struct {
	DaysBeforeExpiry   *int32 `json:"days_before_expiry,omitempty"`
	LifetimePercentage *int32 `json:"lifetime_percentage,omitempty"`
}

// CertificateTemplate defines model for CertificateTemplate.
type CertificateTemplate struct {
	// Deleted Time when the deleted was deleted
	Deleted        *time.Time                   `json:"deleted,omitempty"`
	Id             Identifier                   `json:"id"`
	IssuerTemplate externalRef0.ResourceLocator `json:"issuerTemplate"`

	// KeyProperties Property bag of JSON Web Key (RFC 7517) with additional fields, all bytes are base64url encoded
	KeyProperties           externalRef0.JwkProperties            `json:"keyProperties"`
	KeyStorePath            *string                               `json:"keyStorePath,omitempty"`
	LifetimeTrigger         CertificateLifetimeTrigger            `json:"lifetimeTrigger"`
	LinkTo                  *externalRef0.ResourceLocator         `json:"linkTo,omitempty"`
	Locator                 ResourceLocator                       `json:"locator"`
	Metadata                map[string]interface{}                `json:"metadata,omitempty"`
	SubjectAlternativeNames *externalRef0.SubjectAlternativeNames `json:"subjectAlternativeNames,omitempty"`

	// SubjectCommonName Common name
	SubjectCommonName string `json:"subjectCommonName"`

	// Updated Time when the resoruce was last updated
	Updated          *time.Time                      `json:"updated,omitempty"`
	UpdatedBy        *string                         `json:"updatedBy,omitempty"`
	Usages           []externalRef0.CertificateUsage `json:"usages"`
	ValidityInMonths int32                           `json:"validity_months"`
}

// CertificateTemplateFields Certificate fields, may accept template substitutions
type CertificateTemplateFields struct {
	IssuerTemplate externalRef0.ResourceLocator `json:"issuerTemplate"`

	// KeyProperties Property bag of JSON Web Key (RFC 7517) with additional fields, all bytes are base64url encoded
	KeyProperties           externalRef0.JwkProperties            `json:"keyProperties"`
	KeyStorePath            *string                               `json:"keyStorePath,omitempty"`
	LifetimeTrigger         CertificateLifetimeTrigger            `json:"lifetimeTrigger"`
	SubjectAlternativeNames *externalRef0.SubjectAlternativeNames `json:"subjectAlternativeNames,omitempty"`
	Usages                  []externalRef0.CertificateUsage       `json:"usages"`
	ValidityInMonths        int32                                 `json:"validity_months"`
}

// CertificateTemplateRef defines model for CertificateTemplateRef.
type CertificateTemplateRef struct {
	// Deleted Time when the deleted was deleted
	Deleted  *time.Time                    `json:"deleted,omitempty"`
	Id       externalRef0.Identifier       `json:"id"`
	LinkTo   *externalRef0.ResourceLocator `json:"linkTo,omitempty"`
	Locator  externalRef0.ResourceLocator  `json:"locator"`
	Metadata map[string]interface{}        `json:"metadata,omitempty"`

	// SubjectCommonName Common name
	SubjectCommonName string `json:"subjectCommonName"`

	// Updated Time when the resoruce was last updated
	Updated   *time.Time `json:"updated,omitempty"`
	UpdatedBy *string    `json:"updatedBy,omitempty"`
}

// CertificateTemplateRefFields defines model for CertificateTemplateRefFields.
type CertificateTemplateRefFields struct {
	LinkTo *externalRef0.ResourceLocator `json:"linkTo,omitempty"`

	// SubjectCommonName Common name
	SubjectCommonName string `json:"subjectCommonName"`
}

// CreateLinkedCertificateTemplateParameters defines model for CreateLinkedCertificateTemplateParameters.
type CreateLinkedCertificateTemplateParameters struct {
	TargetTemplate externalRef0.ResourceLocator   `json:"targetTemplate"`
	Usage          LinkedCertificateTemplateUsage `json:"usage"`
}

// LinkedCertificateTemplateUsage defines model for LinkedCertificateTemplateUsage.
type LinkedCertificateTemplateUsage string

// ServiceConfig defines model for ServiceConfig.
type ServiceConfig struct {
	AppRoleIds struct {
		AgentActiveHost openapi_types.UUID `json:"Agent.ActiveHost"`
		AppAdmin        openapi_types.UUID `json:"App.Admin"`
	} `json:"appRoleIds"`
	AzureContainerRegistry struct {
		ArmResourceId string `json:"armResourceId"`
		LoginServer   string `json:"loginServer"`
		Name          string `json:"name"`
	} `json:"azureContainerRegistry"`
	AzureSubscriptionId string `json:"azureSubscriptionId"`

	// Deleted Time when the deleted was deleted
	Deleted               *time.Time                   `json:"deleted,omitempty"`
	Id                    externalRef0.Identifier      `json:"id"`
	KeyvaultArmResourceId string                       `json:"keyvaultArmResourceId"`
	Locator               externalRef0.ResourceLocator `json:"locator"`
	Metadata              map[string]interface{}       `json:"metadata,omitempty"`

	// Updated Time when the resoruce was last updated
	Updated   *time.Time `json:"updated,omitempty"`
	UpdatedBy *string    `json:"updatedBy,omitempty"`
}

// ServiceConfigFields defines model for ServiceConfigFields.
type ServiceConfigFields struct {
	AppRoleIds struct {
		AgentActiveHost openapi_types.UUID `json:"Agent.ActiveHost"`
		AppAdmin        openapi_types.UUID `json:"App.Admin"`
	} `json:"appRoleIds"`
	AzureContainerRegistry struct {
		ArmResourceId string `json:"armResourceId"`
		LoginServer   string `json:"loginServer"`
		Name          string `json:"name"`
	} `json:"azureContainerRegistry"`
	AzureSubscriptionId   string `json:"azureSubscriptionId"`
	KeyvaultArmResourceId string `json:"keyvaultArmResourceId"`
}

// AgentConfigNameParameter defines model for AgentConfigNameParameter.
type AgentConfigNameParameter = externalRef0.AgentConfigName

// CertificateIdPathParameter defines model for CertificateIdPathParameter.
type CertificateIdPathParameter = externalRef0.Identifier

// CertificateTemplateIdentifierParameter defines model for CertificateTemplateIdentifierParameter.
type CertificateTemplateIdentifierParameter = externalRef0.Identifier

// IncludeCertificateParameter defines model for IncludeCertificateParameter.
type IncludeCertificateParameter = bool

// NamespaceIdParameter defines model for NamespaceIdParameter.
type NamespaceIdParameter = externalRef0.Identifier

// NamespaceKindParameter defines model for NamespaceKindParameter.
type NamespaceKindParameter = externalRef0.NamespaceKind

// AgentConfigurationResponse defines model for AgentConfigurationResponse.
type AgentConfigurationResponse = externalRef0.AgentConfiguration

// CertificateResponse defines model for CertificateResponse.
type CertificateResponse = externalRef0.CertificateInfo

// PatchServiceConfigJSONBody defines parameters for PatchServiceConfig.
type PatchServiceConfigJSONBody = interface{}

// PatchServiceConfigParamsConfigPath defines parameters for PatchServiceConfig.
type PatchServiceConfigParamsConfigPath string

// GetAgentConfigurationParams defines parameters for GetAgentConfiguration.
type GetAgentConfigurationParams struct {
	RefreshToken               *string `form:"refreshToken,omitempty" json:"refreshToken,omitempty"`
	XSmallkmsIfVersionNotMatch *string `json:"X-Smallkms-If-Version-Not-Match,omitempty"`
}

// AddKeyVaultRoleAssignmentParams defines parameters for AddKeyVaultRoleAssignment.
type AddKeyVaultRoleAssignmentParams struct {
	RoleDefinitionId string `form:"roleDefinitionId" json:"roleDefinitionId"`
}

// GetCertificateParams defines parameters for GetCertificate.
type GetCertificateParams struct {
	IncludeCertificate *IncludeCertificateParameter `form:"includeCertificate,omitempty" json:"includeCertificate,omitempty"`
	TemplateId         *externalRef0.Identifier     `form:"templateId,omitempty" json:"templateId,omitempty"`
}

// ProvisionAgentProfileJSONRequestBody defines body for ProvisionAgentProfile for application/json ContentType.
type ProvisionAgentProfileJSONRequestBody = externalRef0.AgentProfileParameters

// PatchServiceConfigJSONRequestBody defines body for PatchServiceConfig for application/json ContentType.
type PatchServiceConfigJSONRequestBody = PatchServiceConfigJSONBody

// AgentCallbackJSONRequestBody defines body for AgentCallback for application/json ContentType.
type AgentCallbackJSONRequestBody = externalRef0.AgentConfiguration

// PutAgentConfigurationJSONRequestBody defines body for PutAgentConfiguration for application/json ContentType.
type PutAgentConfigurationJSONRequestBody = externalRef0.AgentConfigurationParameters

// CreateLinkedCertificateTemplateJSONRequestBody defines body for CreateLinkedCertificateTemplate for application/json ContentType.
type CreateLinkedCertificateTemplateJSONRequestBody = CreateLinkedCertificateTemplateParameters
