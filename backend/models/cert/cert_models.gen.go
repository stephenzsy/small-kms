// Package certmodels provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package certmodels

import (
	"net"

	externalRef1 "github.com/stephenzsy/small-kms/backend/models/key"
)

// Defines values for CertificateFlag.
const (
	CertificateFlagCA         CertificateFlag = "ca"
	CertificateFlagClientAuth CertificateFlag = "clientAuth"
	CertificateFlagRootCA     CertificateFlag = "rootCa"
	CertificateFlagServerAuth CertificateFlag = "serverAuth"
)

// CertificateFlag defines model for CertificateFlag.
type CertificateFlag string

// CertificatePolicy defines model for CertificatePolicy.
type CertificatePolicy = certificatePolicyComposed

// CertificatePolicyFields defines model for CertificatePolicyFields.
type CertificatePolicyFields struct {
	Alg              externalRef1.JsonWebSignatureAlgorithm `json:"alg"`
	ExpiryTime       string                                 `json:"expiryTime"`
	KeyExtractable   bool                                   `json:"ext"`
	Flags            []CertificateFlag                      `json:"flags"`
	IssuerIdentifier string                                 `json:"issuerIdentifier"`

	// KeySpec these attributes should mostly confirm to JWK (RFC7517)
	KeySpec                 externalRef1.JsonWebKeySpec `json:"keySpec"`
	Subject                 CertificateSubject          `json:"subject"`
	SubjectAlternativeNames *SubjectAlternativeNames    `json:"subjectAlternativeNames,omitempty"`
}

// CertificateSubject defines model for CertificateSubject.
type CertificateSubject struct {
	CommonName string `json:"commonName"`
}

// SubjectAlternativeNames defines model for SubjectAlternativeNames.
type SubjectAlternativeNames struct {
	DNSNames    []string `json:"dnsNames,omitempty"`
	Emails      []string `json:"emails,omitempty"`
	IPAddresses []net.IP `json:"ipAddresses,omitempty"`
}

// CertificatePolicyResponse defines model for CertificatePolicyResponse.
type CertificatePolicyResponse = CertificatePolicy
