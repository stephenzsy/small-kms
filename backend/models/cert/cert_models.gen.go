// Package certmodels provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package certmodels

import (
	"net"

	externalRef0 "github.com/stephenzsy/small-kms/backend/models"
	externalRef1 "github.com/stephenzsy/small-kms/backend/models/key"
)

// Defines values for CertificateFlag.
const (
	CertificateFlagClientAuth CertificateFlag = "clientAuth"
	CertificateFlagServerAuth CertificateFlag = "serverAuth"
)

// Defines values for CertificatePrivateKeyMode.
const (
	CertificateKeyModeClient             CertificatePrivateKeyMode = "client"
	CertificateKeyModeCloudExportable    CertificatePrivateKeyMode = "cloud-exportable"
	CertificateKeyModeCloudNonExportable CertificatePrivateKeyMode = "cloud-non-exportable"
)

// Certificate defines model for Certificate.
type Certificate = certificateComposed

// CertificateFields defines model for CertificateFields.
type CertificateFields struct {
	// Cid Key Vault certificate ID
	KeyVaultCertificateID string                            `json:"cid,omitempty"`
	Flags                 []CertificateFlag                 `json:"flags,omitempty"`
	IssuerIdentifier      string                            `json:"issuerIdentifier"`
	Jwk                   *externalRef1.JsonWebSignatureKey `json:"jwk,omitempty"`
	Nbf                   externalRef0.NumericDate          `json:"nbf"`

	// Sid Key Vault Secret ID
	KeyVaultSecretID        string                   `json:"sid,omitempty"`
	Subject                 string                   `json:"subject"`
	SubjectAlternativeNames *SubjectAlternativeNames `json:"subjectAlternativeNames,omitempty"`
}

// CertificateFlag defines model for CertificateFlag.
type CertificateFlag string

// CertificatePolicy defines model for CertificatePolicy.
type CertificatePolicy = certificatePolicyComposed

// CertificatePolicyFields defines model for CertificatePolicyFields.
type CertificatePolicyFields struct {
	ExpiryTime             string                    `json:"expiryTime"`
	Flags                  []CertificateFlag         `json:"flags,omitempty"`
	IssuerPolicyIdentifier string                    `json:"issuerPolicyIdentifier"`
	KeyMode                CertificatePrivateKeyMode `json:"keyMode"`

	// KeySpec these attributes should mostly confirm to JWK (RFC7517)
	KeySpec                 externalRef1.JsonWebKeySpec `json:"keySpec"`
	Subject                 CertificateSubject          `json:"subject"`
	SubjectAlternativeNames *SubjectAlternativeNames    `json:"subjectAlternativeNames,omitempty"`
}

// CertificatePrivateKeyMode defines model for CertificatePrivateKeyMode.
type CertificatePrivateKeyMode string

// CertificateRef defines model for CertificateRef.
type CertificateRef = certificateRefComposed

// CertificateRefFields defines model for CertificateRefFields.
type CertificateRefFields struct {
	Exp              externalRef0.NumericDate  `json:"exp"`
	Iat              *externalRef0.NumericDate `json:"iat,omitempty"`
	PolicyIdentifier string                    `json:"policyIdentifier"`

	// Thumbprint Hex encoded certificate thumbprint
	Thumbprint string `json:"thumbprint"`
}

// CertificateSubject defines model for CertificateSubject.
type CertificateSubject struct {
	CommonName string `json:"cn"`
}

// CreateCertificatePolicyRequest defines model for CreateCertificatePolicyRequest.
type CreateCertificatePolicyRequest struct {
	DisplayName            string                    `json:"displayName,omitempty"`
	ExpiryTime             string                    `json:"expiryTime,omitempty"`
	Flags                  []CertificateFlag         `json:"flags,omitempty"`
	IssuerPolicyIdentifier string                    `json:"issuerPolicyIdentifier,omitempty"`
	KeyMode                CertificatePrivateKeyMode `json:"keyMode,omitempty"`

	// KeySpec these attributes should mostly confirm to JWK (RFC7517)
	KeySpec                 *externalRef1.JsonWebKeySpec `json:"keySpec,omitempty"`
	Subject                 CertificateSubject           `json:"subject"`
	SubjectAlternativeNames *SubjectAlternativeNames     `json:"subjectAlternativeNames,omitempty"`
}

// SubjectAlternativeNames defines model for SubjectAlternativeNames.
type SubjectAlternativeNames struct {
	DNSNames    []string `json:"dnsNames,omitempty"`
	Emails      []string `json:"emails,omitempty"`
	IPAddresses []net.IP `json:"ipAddresses,omitempty"`
}

// CertificatePolicyResponse defines model for CertificatePolicyResponse.
type CertificatePolicyResponse = CertificatePolicy

// CertificateResponse defines model for CertificateResponse.
type CertificateResponse = Certificate
