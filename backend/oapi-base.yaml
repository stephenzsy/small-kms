openapi: 3.0.3
info:
  title: Small KMS Shared Managed App Models
  version: 0.1.2
servers:
  - url: https://example.com
    description: Local server
security:
  - BearerAuth: []
paths:
  /v1/diagnostics:
    get:
      tags:
        - admin
        - agent
      summary: Get diagnostics
      operationId: GetDiagnostics
      responses:
        "200":
          description: Diagnostics response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestDiagnostics"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AzureRoleAssignment:
      type: object
      properties:
        id:
          type: string
          x-go-name: ID
        name:
          type: string
        roleDefinitionId:
          type: string
        principalId:
          type: string
    Base64RawURLEncodedBytes:
      type: string
      x-go-type: cloudkey.Base64RawURLEncodableBytes
      x-go-type-import:
        path: "github.com/stephenzsy/small-kms/backend/cloud/key"
        name: cloudkey
      x-go-type-skip-optional-pointer: true
    Identifier:
      type: string
      x-go-type: identifier
    NamespaceKind:
      type: string
      enum:
        - sys
        - profile
        - root-ca
        - int-ca
        - service-principal
        - group
        - user
      x-enum-varnames:
        - NamespaceKindSystem
        - NamespaceKindProfile
        - NamespaceKindRootCA
        - NamespaceKindIntermediateCA
        - NamespaceKindServicePrincipal
        - NamespaceKindGroup
        - NamespaceKindUser
    ResourceKind:
      type: string
      enum:
        - managed-app
        - root-ca
        - int-ca
        - service-principal
        - group
        - user
        - cert-policy
        - cert
        - key-policy
        - secret-policy
        - ns-config
        - agent-instance
      x-enum-varnames:
        - ProfileResourceKindManagedApp
        - ProfileResourceKindRootCA
        - ProfileResourceKindIntermediateCA
        - ProfileResourceKindServicePrincipal
        - ProfileResourceKindGroup
        - ProfileResourceKindUser
        - ResourceKindCertPolicy
        - ResourceKindCert
        - ResourceKindKeyPolicy
        - ResourceKindSecretPolicy
        - ResourceKindNamespaceConfig
        - ResourceKindAgentInstance
    NumericDate:
      type: integer
      format: int64
      x-go-type: jwt.NumericDate
      x-go-type-import:
        path: github.com/golang-jwt/jwt/v5
    Period:
      type: string
      x-go-type: periodImpl
    ResourceUniqueIdentifier:
      type: string
      x-go-type: DocFullIdentifier
    ResourceReference:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/Identifier"
          x-go-name: ID
        updated:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
        updatedBy:
          type: string
      required:
        - id
        - uid
        - updated
    RequestHeaderEntry:
      type: object
      properties:
        key:
          type: string
        value:
          type: array
          items:
            type: string
      required:
        - key
        - value
    ServiceRuntimeInfo:
      type: object
      properties:
        goVersion:
          type: string
        buildId:
          type: string
          x-go-name: BuildID
        environment:
          type: array
          items:
            type: string
          x-go-type-skip-optional-pointer: true
      required:
        - goVersion
        - buildId
    RequestDiagnostics:
      type: object
      properties:
        requestHeaders:
          type: array
          items:
            $ref: "#/components/schemas/RequestHeaderEntry"
        serviceRuntime:
          $ref: "#/components/schemas/ServiceRuntimeInfo"
      required:
        - requestHeaders
        - serviceRuntime
  parameters:
    NamespaceKindParameter:
      in: path
      name: namespaceKind
      required: true
      schema:
        $ref: "#/components/schemas/NamespaceKind"
    NamespaceIdentifierParameter:
      in: path
      name: namespaceIdentifier
      required: true
      schema:
        $ref: "#/components/schemas/Identifier"
    ResourceIdentifierParameter:
      in: path
      name: resourceIdentifier
      required: true
      schema:
        $ref: "#/components/schemas/Identifier"
  responses:
    AzureRoleAssignmentResponse:
      description: Role Assignment response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AzureRoleAssignment"
    ListAzureRoleAssignmentsResponse:
      description: list of azure role assignments
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AzureRoleAssignment"
