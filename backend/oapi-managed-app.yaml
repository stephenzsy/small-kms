openapi: 3.0.3
info:
  title: Small KMS Shared Models
  version: 0.1.2
servers:
  - url: https://example.com
    description: Local server
paths:
  /v1/managed-app:
    get:
      tags:
        - admin
      operationId: ListManagedApps
      summary: List managed apps
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ManagedApp"
    post:
      tags:
        - admin
      operationId: CreateManagedApp
      summary: Create a managed app
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManagedAppParameters"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedApp"
  /v1/managed-app/{managedAppId}:
    parameters:
      - $ref: "#/components/parameters/ManagedAppIdParameter"
    get:
      tags:
        - admin
      operationId: GetManagedApp
      summary: Get managed app
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedApp"
    post:
      tags:
        - admin
      operationId: SyncManagedApp
      summary: Sync managed app
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedApp"
  /v1/system-app/{systemAppName}:
    parameters:
      - in: path
        name: systemAppName
        required: true
        schema:
          $ref: "#/components/schemas/SystemAppName"
    get:
      tags:
        - admin
      operationId: GetSystemApp
      summary: Get system app
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedApp"
    post:
      tags:
        - admin
      operationId: SyncSystemApp
      summary: Sync managed app
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedApp"
  /v1/{namespaceKind}/{namespaceId}/agent-config/server:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - admin
        - agentclient
      operationId: GetAgentConfigServer
      summary: Get agent config server
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentConfigServer"
    put:
      tags:
        - admin
      operationId: PutAgentConfigServer
      summary: Put agent config server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentConfigServerFields"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentConfigServer"
  /v1/{namespaceKind}/{namespaceId}/agent/instance:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - admin
      operationId: ListAgentInstances
      summary: List agent config server instances
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AgentInstance"
  /v1/{namespaceKind}/{namespaceId}/agent/instance/{resourceId}:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
      - $ref: "oapi-base.yaml#/components/parameters/ResourceIdParameter"
    put:
      tags:
        - admin
        - agentclient
      operationId: PutAgentInstance
      summary: Put agent config server instance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentInstanceFields"
      responses:
        201:
          description: No content
          content: {}
    # delete:
    #   tags:
    #     - admin
    #     - agentclient
    #   operationId: DeleteAgentInstance
    #   summary: Delete agent config server instance
    #   responses:
    #     204:
    #       description: No content
    #       content: {}
    get:
      tags:
        - admin
      operationId: GetAgentInstance
      summary: Get agent config server instance
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentInstance"
  /v1/{namespaceKind}/{namespaceId}/agent/instance/{resourceId}/proxy-auth/token:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
      - $ref: "oapi-base.yaml#/components/parameters/ResourceIdParameter"
    post:
      tags:
        - admin
      operationId: CreateAgentInstanceProxyAuthToken
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResult"
  /v1/{namespaceKind}/{namespaceId}/agent-config/server/role-assignments:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - admin
      summary: List Key Vault role assignments
      operationId: ListAgentServerAzureRoleAssignments
      responses:
        200:
          $ref: "oapi-base.yaml#/components/responses/ListAzureRoleAssignmentsResponse"
security:
  - BearerAuth: []
components:
  schemas:
    SystemAppName:
      type: string
      enum:
        - backend
        - api
      x-enum-varnames:
        - SystemAppNameBackend
        - SystemAppNameAPI
    ManagedAppRef:
      allOf:
        - $ref: "oapi-profile.yaml#/components/schemas/ProfileRef"
        - $ref: "#/components/schemas/ManagedAppRefFields"
        - x-go-type: managedAppRefComposed
    ManagedAppRefFields:
      properties:
        appId:
          type: string
          format: uuid
          x-go-name: AppID
        applicationId:
          description: Object ID
          type: string
          format: uuid
          x-go-name: ApplicationID
        servicePrincipalId:
          type: string
          format: uuid
          x-go-name: ServicePrincipalID
        servicePrincipalType:
          type: string
          x-go-type-skip-optional-pointer: true
      required:
        - appId
        - applicationId
        - servicePrincipalId
    ManagedApp:
      $ref: "#/components/schemas/ManagedAppRef"
    ManagedAppParameters:
      type: object
      properties:
        displayName:
          type: string
        skipServicePrincipalCreation:
          type: boolean
      required:
        - displayName
    AgentInstance:
      allOf:
        - $ref: "oapi-base.yaml#/components/schemas/ResourceReference"
        - $ref: "#/components/schemas/AgentInstanceFields"
        - x-go-type: agentInstanceComposed
    AgentMode:
      type: string
      enum:
        - server
        - launcher
      x-enum-varnames:
        - AgentModeServer
        - AgentModeLauncher
    AgentInstanceFields:
      type: object
      properties:
        endpoint:
          type: string
          x-go-type-skip-optional-pointer: true
        version:
          type: string
        buildId:
          type: string
          x-go-name: BuildID
        mode:
          $ref: "#/components/schemas/AgentMode"
      required:
        - version
        - buildId
        - mode
    AgentConfig:
      allOf:
        - $ref: "oapi-base.yaml#/components/schemas/ResourceReference"
        - $ref: "#/components/schemas/AgentConfigFields"
        - x-go-type: agentConfigComposed
    AgentConfigFields:
      type: object
      properties:
        version:
          type: string
        refreshAfter:
          type: string
          format: date-time
      required:
        - version
        - refreshAfter
    AgentConfigServer:
      allOf:
        - $ref: "#/components/schemas/AgentConfig"
        - $ref: "#/components/schemas/AgentConfigServerFields"
        - x-go-type: agentConfigServerComposed
    AgentConfigServerEnv:
      description: Environment variables for the agent config server, must be set manually
      type: object
      properties:
        _message:
          type: string
        AZURE_KEYVAULT_RESOURCEENDPOINT:
          type: string
          x-go-name: EnvVarAzureKeyVaultResourceEndpoint
        AZURE_ACR_IMAGE_REPOSITORY:
          type: string
          x-go-name: EnvVarAzureContainerRegistryImageRepository
      required:
        - _message
        - AZURE_KEYVAULT_RESOURCEENDPOINT
        - AZURE_ACR_IMAGE_REPOSITORY
    AgentConfigServerFields:
      type: object
      properties:
        env:
          $ref: "#/components/schemas/AgentConfigServerEnv"
        tlsCertificatePolicyId:
          $ref: "oapi-base.yaml#/components/schemas/Id"
          x-go-name: TLSCertificatePolicyID
        tlsCertificateId:
          $ref: "oapi-base.yaml#/components/schemas/Id"
          x-go-name: TLSCertificateID
        jwtKeyCertPolicyId:
          $ref: "oapi-base.yaml#/components/schemas/ResourceLocator"
          x-go-name: JWKPolicyID
        jwtKeyCertIds:
          type: array
          items:
            $ref: "oapi-base.yaml#/components/schemas/ResourceLocator"
          x-go-name: JWTKeyCertIDs
        azureAcrImageRef:
          type: string
          x-go-name: AzureACRImageRef
      required:
        - env
        - tlsCertificatePolicyId
        - tlsCertificateId
        - jwtKeyCertPolicyId
        - jwtKeyCertIds
        - azureAcrImageRef
    AzureRoleAssignment:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        roleDefinitionId:
          type: string
        principalId:
          type: string
    AuthResult:
      type: object
      properties:
        accessToken:
          type: string
      required:
        - accessToken
  parameters:
    ManagedAppIdParameter:
      in: path
      name: managedAppId
      required: true
      schema:
        type: string
        format: uuid
  responses:
    AzureRoleAssignmentResponse:
      description: Role Assignment response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AzureRoleAssignment"
    ListAzureRoleAssignmentsResponse:
      description: list of azure role assignments
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AzureRoleAssignment"
