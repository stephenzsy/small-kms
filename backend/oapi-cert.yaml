openapi: 3.0.3
info:
  title: Small KMS Shared Models
  version: 0.1.2
servers:
  - url: https://example.com
    description: Local server
paths:
  /v1/{namespaceKind}/{namespaceId}/certificates:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - admin
      operationId: ListCertificates
      summary: List certificates
      parameters:
        - name: policyId
          in: query
          description: Policy ID
          required: false
          schema:
            type: string
      responses:
        200:
          description: List of cert specs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CertificateRef"
  /v1/{namespaceKind}/{namespaceId}/certificates/{resourceId}:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
      - $ref: "oapi-base.yaml#/components/parameters/ResourceIdParameter"
    get:
      tags:
        - admin
        - agentclient
      operationId: GetCertificate
      summary: Get certificate
      responses:
        200:
          $ref: "#/components/responses/CertificateResponse"
  /v1/{namespaceKind}/{namespaceId}/cert-rule/issuer:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - admin
      operationId: GetCertificateRuleIssuer
      summary: Get certificate rules for namespace
      responses:
        200:
          description: Certificate rules response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateRuleIssuer"
    put:
      tags:
        - admin
      operationId: PutCertificateRuleIssuer
      summary: Update certificate rules for namespace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateRuleIssuer"
      responses:
        200:
          description: Certificate rules response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateRuleIssuer"
  /v1/{namespaceKind}/{namespaceId}/cert-rule/ms-entra-client-credential:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - admin
      operationId: GetCertificateRuleMsEntraClientCredential
      summary: Get certificate rules for namespace
      responses:
        200:
          description: Certificate rules response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateRuleMsEntraClientCredential"
    put:
      tags:
        - admin
      operationId: PutCertificateRuleMsEntraClientCredential
      summary: Update certificate rules for namespace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateRuleMsEntraClientCredential"
      responses:
        200:
          description: Certificate rules response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateRuleMsEntraClientCredential"
  /v1/{namespaceKind}/{namespaceId}/cert-policy:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - admin
      operationId: ListCertPolicies
      summary: List cert policies
      responses:
        200:
          description: List of cert specs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CertPolicyRef"
  /v1/{namespaceKind}/{namespaceId}/cert-policy/{resourceId}:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
      - $ref: "oapi-base.yaml#/components/parameters/ResourceIdParameter"
    get:
      tags:
        - admin
      operationId: GetCertPolicy
      summary: Get cert policy
      responses:
        200:
          $ref: "#/components/responses/CertPolicyResponse"
  /v1/{namespaceKind}/{namespaceId}/cert-policy/{resourceId}/keyvault-role-assignments/{resourceCategory}:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdParameter"
      - $ref: "oapi-base.yaml#/components/parameters/ResourceIdParameter"
      - in: path
        name: resourceCategory
        required: true
        schema:
          $ref: "#/components/schemas/AzureKeyvaultResourceCategory"
    get:
      tags:
        - admin
      summary: List Key Vault role assignments
      operationId: ListKeyVaultRoleAssignments
      responses:
        200:
          $ref: "oapi-base.yaml#/components/responses/ListAzureRoleAssignmentsResponse"
    post:
      tags:
        - admin
      summary: Add Key Vault role assignment
      operationId: AddKeyVaultRoleAssignment
      parameters:
        - in: query
          name: roleDefinitionId
          schema:
            type: string
          required: true
      responses:
        200:
          $ref: "oapi-base.yaml#/components/responses/AzureRoleAssignmentResponse"
security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AzureKeyvaultResourceCategory:
      type: string
      enum:
        - keys
        - secrets
        - certificates
      x-enum-varnames:
        - AzureKeyvaultResourceCategoryKeys
        - AzureKeyvaultResourceCategorySecrets
        - AzureKeyvaultResourceCategoryCertificates
    CertificateFlag:
      type: string
      enum:
        - ca
        - rootCa
        - serverAuth
        - clientAuth
      x-enum-varnames:
        - CertificateFlagCA
        - CertificateFlagRootCA
        - CertificateFlagServerAuth
        - CertificateFlagClientAuth
    CertPolicyRef:
      allOf:
        - $ref: "oapi-base.yaml#/components/schemas/ResourceReference"
        - $ref: "#/components/schemas/CertPolicyRefFields"
        - x-go-type: certPolicyRefComposed
    CertPolicyRefFields:
      properties:
        displayName:
          type: string
      required:
        - displayName
    CertPolicy:
      allOf:
        - $ref: "#/components/schemas/CertPolicyRef"
        - $ref: "#/components/schemas/CertPolicyFields"
        - x-go-type: certPolicyComposed
    CertPolicyFields:
      properties:
        issuerNamespaceKind:
          $ref: "oapi-base.yaml#/components/schemas/NamespaceKind"
        issuerNamespaceIdentifier:
          $ref: "oapi-base.yaml#/components/schemas/Id"
        keySpec:
          $ref: "oapi-key.yaml#/components/schemas/SigningKeySpec"
        keyExportable:
          type: boolean
        expiryTime:
          $ref: "oapi-base.yaml#/components/schemas/Period"
        lifetimeAction:
          $ref: "oapi-key.yaml#/components/schemas/LifetimeAction"
        subject:
          $ref: "#/components/schemas/CertificateSubject"
        subjectAlternativeNames:
          $ref: "#/components/schemas/SubjectAlternativeNames"
        flags:
          type: array
          items:
            $ref: "#/components/schemas/CertificateFlag"
        version:
          type: string
          x-go-type: HexDigest
      required:
        - issuerNamespaceKind
        - issuerNamespaceIdentifier
        - keySpec
        - keyExportable
        - expiryTime
        - subject
        - certificateFlags
        - flags
        - version
    CertPolicyParameters:
      type: object
      properties:
        displayName:
          type: string
          x-go-type-skip-optional-pointer: true
        keySpec:
          $ref: "oapi-key.yaml#/components/schemas/SigningKeySpec"
        keyExportable:
          type: boolean
        expiryTime:
          $ref: "oapi-base.yaml#/components/schemas/Period"
        lifetimeAction:
          $ref: "oapi-key.yaml#/components/schemas/LifetimeAction"
        subject:
          $ref: "#/components/schemas/CertificateSubject"
        subjectAlternativeNames:
          $ref: "#/components/schemas/SubjectAlternativeNames"
        flags:
          type: array
          items:
            $ref: "#/components/schemas/CertificateFlag"
          x-go-type-skip-optional-pointer: true
        issuerNamespaceKind:
          $ref: "oapi-base.yaml#/components/schemas/NamespaceKind"
        issuerNamespaceIdentifier:
          $ref: "oapi-base.yaml#/components/schemas/Id"
      required:
        - expiryTime
        - subject
    CertificateSubject:
      type: object
      properties:
        commonName:
          type: string
      required:
        - commonName
    SubjectAlternativeNames:
      type: object
      properties:
        dnsNames:
          type: array
          items:
            type: string
          x-go-type-skip-optional-pointer: true
          x-go-name: DNSNames
        ipAddresses:
          type: array
          items:
            type: string
            x-go-type: net.IP
          x-go-type-skip-optional-pointer: true
          x-go-name: IPAddresses
        emails:
          type: array
          items:
            type: string
          x-go-type-skip-optional-pointer: true
    CertificateRef:
      allOf:
        - $ref: "oapi-base.yaml#/components/schemas/ResourceReference"
        - $ref: "#/components/schemas/CertificateRefFields"
        - x-go-type: certificateRefComposed
    CertificateAttributes:
      type: object
      properties:
        issuer:
          $ref: "oapi-base.yaml#/components/schemas/ResourceLocator"
        iat:
          $ref: "oapi-base.yaml#/components/schemas/NumericDate"
          x-go-name: Created
        nbf:
          $ref: "oapi-base.yaml#/components/schemas/NumericDate"
          x-go-name: NotBefore
        exp:
          $ref: "oapi-base.yaml#/components/schemas/NumericDate"
          x-go-name: NotAfter
    CertificateRefFields:
      type: object
      properties:
        thumbprint:
          type: string
        attributes:
          $ref: "#/components/schemas/CertificateAttributes"
      required:
        - thumbprint
        - attributes
    Certificate:
      allOf:
        - $ref: "#/components/schemas/CertificateRef"
        - $ref: "#/components/schemas/CertificateFields"
        - x-go-type: certificateComposed
    CertificateFields:
      type: object
      properties:
        subject:
          $ref: "#/components/schemas/CertificateSubject"
        subjectAlternativeNames:
          $ref: "#/components/schemas/SubjectAlternativeNames"
        flags:
          type: array
          items:
            $ref: "#/components/schemas/CertificateFlag"
          x-go-type-skip-optional-pointer: true
        jwk:
          $ref: "oapi-key.yaml#/components/schemas/JsonWebKey"
        alg:
          $ref: "oapi-key.yaml#/components/schemas/JsonWebSignatureAlgorithm"
        sid:
          type: string
          x-go-name: KeyVaultSecretID
          x-go-type-skip-optional-pointer: true
      required:
        - subject
        - jwk
        - alg
    EnrollmentType:
      type: string
      enum:
        - ms-entra-client-credential
        - group-memeber
      x-enum-varnames:
        - EnrollmentTypeMsEntraClientCredential
        - EnrollmentTypeGroupMember
    EnrollCertificateRequest:
      type: object
      properties:
        enrollmentType:
          $ref: "#/components/schemas/EnrollmentType"
        publicKey:
          $ref: "oapi-key.yaml#/components/schemas/JsonWebSignatureKey"
        proof:
          description: Signed JWT to show proof of possession of the private key
          type: string
        force:
          description: Force enrollment, will clear existing credential on graph, initial enrollment must be forced
          type: boolean
      required:
        - enrollmentType
        - publicKey
        - proof
    PolicyIssuerCertRequest:
      type: object
      properties:
        issuerId:
          $ref: "oapi-base.yaml#/components/schemas/Id"
      required:
        - issuerId
    CertificateRuleIssuer:
      type: object
      properties:
        policyId:
          $ref: "oapi-base.yaml#/components/schemas/Id"
        certificateId:
          $ref: "oapi-base.yaml#/components/schemas/Id"
      required:
        - policyId
    CertificateRuleMsEntraClientCredential:
      type: object
      properties:
        policyId:
          $ref: "oapi-base.yaml#/components/schemas/Id"
        certificateIds:
          type: array
          items:
            $ref: "oapi-base.yaml#/components/schemas/Id"
          x-go-type-skip-optional-pointer: true
      required:
        - policyId
  responses:
    CertPolicyResponse:
      description: Key spec reponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CertPolicy"
    CertificateResponse:
      description: Key spec reponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Certificate"
