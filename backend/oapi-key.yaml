openapi: 3.0.3
info:
  title: Small KMS Shared Models
  version: 0.1.2
servers:
  - url: https://example.com
    description: Local server
paths:
  /v1/{namespaceKind}/{namespaceIdentifier}/key-policy:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdentifierParameter"
    get:
      tags:
        - admin
      operationId: ListKeyPolicies
      summary: List key policies
      responses:
        200:
          description: List of key specs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/KeyPolicyRef"
  /v1/{namespaceKind}/{namespaceIdentifier}/key-policy/{resourceIdentifier}:
    parameters:
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceKindParameter"
      - $ref: "oapi-base.yaml#/components/parameters/NamespaceIdentifierParameter"
      - $ref: "oapi-base.yaml#/components/parameters/ResourceIdentifierParameter"
    get:
      tags:
        - admin
      operationId: GetKeyPolicy
      summary: Get key spec
      responses:
        200:
          $ref: "#/components/responses/KeyPolicyResponse"
    put:
      tags:
        - admin
      operationId: PutKeyPolicy
      summary: Put key spec
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyPolicyParameters"
      responses:
        200:
          $ref: "#/components/responses/KeyPolicyResponse"
security:
  - BearerAuth: []
components:
  schemas:
    JsonWebKeyCurveName:
      type: string
      enum:
        - P-256
        - P-384
        - P-521
      x-enum-varnames:
        - JsonWebKeyCurveNameP256
        - JsonWebKeyCurveNameP384
        - JsonWebKeyCurveNameP521
    JsonWebKeyOperation:
      type: string
      enum:
        - sign
        - verify
        - encrypt
        - decrypt
        - wrapKey
        - unwrapKey
      x-enum-varnames:
        - JsonWebKeyOperationSign
        - JsonWebKeyOperationVerify
        - JsonWebKeyOperationEncrypt
        - JsonWebKeyOperationDecrypt
        - JsonWebKeyOperationWrapKey
        - JsonWebKeyOperationUnwrapKey
    JsonWebKeyType:
      type: string
      enum:
        - EC
        - RSA
        - oct
      x-enum-varnames:
        - JsonWebKeyTypeEC
        - JsonWebKeyTypeRSA
        - JsonWebKeyTypeOct
    JsonWeyKeySize:
      type: integer
      format: int32
    JsonWebKeySignatureAlgorithm:
      type: string
      enum:
        - ES256
        - ES384
        - ES512
        - PS256
        - PS384
        - PS512
        - RS256
        - RS384
        - RS512
      x-enum-varnames:
        - JsonWebKeySignatureAlgorithmES256
        - JsonWebKeySignatureAlgorithmES384
        - JsonWebKeySignatureAlgorithmES512
        - JsonWebKeySignatureAlgorithmPS256
        - JsonWebKeySignatureAlgorithmPS384
        - JsonWebKeySignatureAlgorithmPS512
        - JsonWebKeySignatureAlgorithmRS256
        - JsonWebKeySignatureAlgorithmRS384
        - JsonWebKeySignatureAlgorithmRS512
    KeySpec:
      description: these attributes should mostly confirm to JWK (RFC7517)
      type: object
      properties:
        kty:
          $ref: "#/components/schemas/JsonWebKeyType"
          x-go-name: KeyType
        kid:
          type: string
          x-go-name: KeyID
        crv:
          $ref: "#/components/schemas/JsonWebKeyCurveName"
          x-go-name: CurveName
        key_size:
          $ref: "#/components/schemas/JsonWeyKeySize"
          x-go-name: KeySize
        key_ops:
          type: array
          items:
            $ref: "#/components/schemas/JsonWebKeyOperation"
          x-go-name: KeyOperations
      required:
        - kty
        - key_ops
    SigningKeySpec:
      allOf:
        - $ref: "#/components/schemas/KeySpec"
        - type: object
          properties:
            alg:
              $ref: "#/components/schemas/JsonWebKeySignatureAlgorithm"
              x-go-name: SignatureAlgorithm
            x5c:
              description: Base64 encoded certificate chain
              type: array
              items:
                $ref: "oapi-base.yaml#/components/schemas/Base64RawURLEncodedBytes"
              x-go-name: CertificateChain
              x-go-type-skip-optional-pointer: true
            x5t:
              $ref: "oapi-base.yaml#/components/schemas/Base64RawURLEncodedBytes"
              x-go-name: ThumbprintSHA1
            x5t#S256:
              $ref: "oapi-base.yaml#/components/schemas/Base64RawURLEncodedBytes"
              x-go-name: ThumbprintSHA256
    JsonWebKey:
      type: object
      properties:
        kty:
          $ref: "#/components/schemas/JsonWebKeyType"
          x-go-name: KeyType
        kid:
          type: string
          x-go-name: KeyID
        key_ops:
          type: array
          items:
            $ref: "#/components/schemas/JsonWebKeyOperation"
          x-go-name: KeyOperations
        n:
          description: RSA modulus
          $ref: "oapi-base.yaml#/components/schemas/Base64RawURLEncodedBytes"
          x-go-name: Modulus
          x-go-type-skip-optional-pointer: true
        e:
          description: RSA public exponent
          $ref: "oapi-base.yaml#/components/schemas/Base64RawURLEncodedBytes"
          x-go-name: Exponent
          x-go-type-skip-optional-pointer: true
      required:
        - kty
    Key:
      allOf:
        - $ref: "oapi-base.yaml#/components/schemas/ResourceReference"
        - $ref: "#/components/schemas/KeySpec"
        - $ref: "#/components/schemas/KeyFields"
        - x-go-type: keyComposed
    KeyAttributes:
      description: these attributes are not in JWK (RFC7517), more like JWT (RFC7519) fields
      type: object
      properties:
        iat:
          $ref: "oapi-base.yaml#/components/schemas/NumericDate"
          x-go-name: Created
        nbf:
          $ref: "oapi-base.yaml#/components/schemas/NumericDate"
          x-go-name: NotBefore
        exp:
          $ref: "oapi-base.yaml#/components/schemas/NumericDate"
          x-go-name: NotAfter
    KeyFields:
      type: object
      properties:
        attributes:
          $ref: "#/components/schemas/KeyAttributes"
      required:
        - kid
        - attributes
    KeyPolicyRef:
      allOf:
        - $ref: "oapi-base.yaml#/components/schemas/ResourceReference"
        - $ref: "#/components/schemas/KeyPolicyRefFields"
        - x-go-type: keyPolicyRefComposed
    KeyPolicyRefFields:
      properties:
        displayName:
          type: string
      required:
        - displayName
    KeyPolicy:
      allOf:
        - $ref: "#/components/schemas/KeyPolicyRef"
        - $ref: "#/components/schemas/KeyPolicyFields"
        - x-go-type: keyPolicyComposed
    KeyPolicyFields:
      type: object
      properties:
        exportable:
          type: boolean
        expiryTime:
          $ref: "oapi-base.yaml#/components/schemas/Period"
        lifetimeActions:
          type: array
          items:
            $ref: "#/components/schemas/LifetimeAction"
          x-go-type-skip-optional-pointer: true
      required:
        - exportable
    KeyPolicyParameters:
      type: object
      properties:
        displayName:
          type: string
        keySpec:
          $ref: "#/components/schemas/KeySpec"
        exportable:
          type: boolean
        expiryTime:
          $ref: "oapi-base.yaml#/components/schemas/Period"
        lifetimeActions:
          type: array
          items:
            $ref: "#/components/schemas/LifetimeAction"
          x-go-type-skip-optional-pointer: true
      required:
        - keySpec
    LifetimeAction:
      type: object
      properties:
        trigger:
          $ref: "#/components/schemas/LifetimeTrigger"
      required:
        - trigger
    LifetimeTrigger:
      type: object
      properties:
        timeAfterCreate:
          $ref: "oapi-base.yaml#/components/schemas/Period"
        timeBeforeExpiry:
          $ref: "oapi-base.yaml#/components/schemas/Period"
        percentageAfterCreate:
          type: integer
          format: int32
  responses:
    KeyPolicyResponse:
      description: Key policy response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/KeyPolicy"
