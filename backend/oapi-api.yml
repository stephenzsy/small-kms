openapi: 3.0.3
info:
  title: Small KMS Admin API Shared
  version: 0.1.1
servers:
  - url: https://example.com
    description: Local server
security:
  - BearerAuth: []
paths:
  /v3/agent/check-in:
    get:
      tags:
        - agent
      parameters:
        - in: query
          name: hostRoles
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AgentHostRole"
          required: false
      operationId: AgentCheckIn
      responses:
        200:
          description: Agent check in response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentCheckInResult"
        204:
          description: No content
  /v3/profiles/{namespaceKind}:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
    get:
      tags:
        - admin
      summary: List profiles by type
      operationId: ListProfiles
      responses:
        200:
          description: List RefsResponse
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileRef"
    post:
      tags:
        - admin
      summary: Create Managed Application
      operationId: CreateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProfileRequest"
        required: true
      responses:
        201:
          description: ProfileRef
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
  /v3/profiles/{namespaceKind}/{namespaceId}:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
      - $ref: "#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - admin
      summary: Get namespace info with ms graph
      operationId: GetProfile
      responses:
        "200":
          description: get namespace profile response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
    post:
      tags:
        - admin
      summary: Sync namespace info with ms graph
      operationId: SyncProfile
      responses:
        "200":
          description: register namespace profile response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
  /v3/profiles/{namespaceKind}/{namespaceId}/managed/{targetNamespaceKind}:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
      - $ref: "#/components/parameters/NamespaceIdParameter"
      - in: path
        name: targetNamespaceKind
        schema:
          $ref: "#/components/schemas/NamespaceKind"
        required: true
    post:
      tags:
        - admin
      summary: Create managed namespace
      operationId: CreateManagedNamespace
      responses:
        "200":
          description: Managed namespace profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
  /v3/{namespaceKind}/{profileId}/certificate-templates:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
      - $ref: "#/components/parameters/ProfileIdentifierParameter"
    get:
      tags:
        - admin
      summary: List certificate templates
      operationId: ListCertificateTemplates
      responses:
        200:
          description: List certificate templates response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CertificateTemplateRef"
  /v3/{namespaceKind}/{namespaceId}/certificate-template/{templateId}:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
      - $ref: "#/components/parameters/NamespaceIdParameter"
      - $ref: "#/components/parameters/CertificateTemplateIdentifierParameter"
    get:
      tags:
        - admin
      summary: Get certificate template
      operationId: GetCertificateTemplate
      responses:
        200:
          description: Certificate template response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateTemplate"
    put:
      tags:
        - admin
      summary: Put certificate template
      operationId: PutCertificateTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateTemplateParameters"
        required: true
      responses:
        200:
          description: Certificate template response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateTemplate"
  /v3/{namespaceKind}/{namespaceId}/certificate-template/{templateId}/keyvault-role-assignments:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
      - $ref: "#/components/parameters/NamespaceIdParameter"
      - $ref: "#/components/parameters/CertificateTemplateIdentifierParameter"
    get:
      tags:
        - admin
      summary: List keyvault role assignments
      operationId: ListKeyVaultRoleAssignments
      responses:
        200:
          description: List keyvault roles assignments response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/KeyVaultRoleAssignment"
  /v3/{namespaceKind}/{profileId}/certificate-template/{templateId}/certificates:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
      - $ref: "#/components/parameters/ProfileIdentifierParameter"
      - $ref: "#/components/parameters/CertificateTemplateIdentifierParameter"
    get:
      tags:
        - admin
      summary: List certificates issued by template
      operationId: ListCertificatesByTemplate
      responses:
        200:
          description: CertificateResponse
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CertificateRef"
    post:
      tags:
        - admin
      summary: Create certificate
      operationId: IssueCertificateFromTemplate
      responses:
        200:
          $ref: "#/components/responses/CertificateResponse"
  /v3/{namespaceKind}/{namespaceId}/certificate/{certificateId}:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
      - $ref: "#/components/parameters/NamespaceIdParameter"
      - $ref: "#/components/parameters/CertificateIdPathParameter"
    get:
      parameters:
        - $ref: "#/components/parameters/IncludeCertificateParameter"
        - in: query
          name: "templateId"
          schema:
            $ref: "#/components/schemas/Identifier"
          required: false
        - in: query
          name: "templateNamespaceKind"
          schema:
            $ref: "#/components/schemas/NamespaceKind"
          required: false
        - in: query
          name: "templateNamespaceId"
          schema:
            $ref: "#/components/schemas/Identifier"
          required: false
      tags:
        - admin
      summary: Get certificate
      operationId: GetCertificate
      responses:
        200:
          description: CertificateResponse
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateInfo"
  /v3/service/config:
    get:
      tags:
        - admin
        - agent
      summary: Get service config
      operationId: GetServiceConfig
      responses:
        200:
          description: ServiceConfig
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfig"
  /v3/service/config/{configPath}:
    patch:
      tags:
        - admin
      parameters:
        - in: path
          name: configPath
          schema:
            title: ServiceConfigPath
            type: string
            enum:
              - azureSubscriptionId
              - keyvaultArmResourceId
              - appRoleIds
              - azureContainerRegistry
            x-enum-varnames:
              - ServiceConfigPathAzureSubscriptionId
              - ServiceConfigPathKeyvaultArmResourceId
              - ServiceConfigPathAppRoleIds
              - ServiceConfigPathAzureContainerRegistry
          required: true
      summary: Update service config
      operationId: PatchServiceConfig
      requestBody:
        content:
          application/json:
            schema: {}
        required: true
      responses:
        200:
          description: ServiceConfig
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfig"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Identifier:
      type: string
      description: Identifier of the resource
      x-go-type-import:
        name: kmscommon
        path: github.com/stephenzsy/small-kms/backend/common
      x-go-type: kmscommon.Identifier
    NamespaceKind:
      type: string
      enum:
        - profile
        - ca-root
        - ca-int
        - service-principal
        - group
        - device
        - user
        - application
      x-enum-varnames:
        - NamespaceKindProfile
        - NamespaceKindCaRoot
        - NamespaceKindCaInt
        - NamespaceKindServicePrincipal
        - NamespaceKindGroup
        - NamespaceKindDevice
        - NamespaceKindUser
        - NamespaceKindApplication
    ResourceKind:
      type: string
      enum:
        - reserved
        - ca-root
        - ca-int
        - ms-graph
        - cert-template
        - cert
        - latest-cert-for-template
      x-enum-varnames:
        - ResourceKindReserved
        - ResourceKindCaRoot
        - ResourceKindCaInt
        - ResourceKindMsGraph
        - ResourceKindCertTemplate
        - ResourceKindCert
        - ResourceKindLatestCertForTemplate
    IdentifierWithNamespaceKind:
      type: string
      x-go-type-import:
        name: kmscommon
        path: github.com/stephenzsy/small-kms/backend/common
      x-go-type: kmscommon.IdentifierWithKind[NamespaceKind]
    IdentifierWithResourceKind:
      type: string
      x-go-type-import:
        name: kmscommon
        path: github.com/stephenzsy/small-kms/backend/common
      x-go-type: kmscommon.IdentifierWithKind[ResourceKind]
    ResourceLocator:
      type: string
      x-go-type-import:
        name: kmscommon
        path: github.com/stephenzsy/small-kms/backend/common
      x-go-type: kmscommon.Locator[NamespaceKind, ResourceKind]
    ResourceRef:
      type: object
      properties:
        id:
          x-go-name: ID
          $ref: "#/components/schemas/Identifier"
        locator:
          $ref: "#/components/schemas/ResourceLocator"
        updated:
          description: Time when the resoruce was last updated
          type: string
          format: date-time
        updatedBy:
          type: string
        deleted:
          description: Time when the deleted was deleted
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties: true
          x-go-type-skip-optional-pointer: true
      required:
        - id
        - locator
    ProfileRefFields:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/NamespaceKind"
        displayName:
          description: Display name of the resource
          type: string
        isAppManaged:
          description: Whether the resource is managed by the application
          type: boolean
      required:
        - type
        - displayName
    ProfileRef:
      allOf:
        - $ref: "#/components/schemas/ResourceRef"
        - $ref: "#/components/schemas/ProfileRefFields"
    Profile:
      allOf:
        - $ref: "#/components/schemas/ProfileRef"
    CreateProfileRequestType:
      type: string
      enum:
        - managed-application
      x-enum-varnames:
        - ProfileTypeManagedApplication
    CreateManagedApplicationProfileRequest:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/CreateProfileRequestType"
        name:
          type: string
      required:
        - type
        - name
    CreateProfileRequest:
      oneOf:
        - $ref: "#/components/schemas/CreateManagedApplicationProfileRequest"
      discriminator:
        propertyName: type
        mapping:
          managed-application: "#/components/schemas/CreateManagedApplicationProfileRequest"
    JwkAlg:
      type: string
      enum:
        - RS256
        - RS384
        - RS512
        - ES256
        - ES384
      x-enum-varnames:
        - AlgRS256
        - AlgRS384
        - AlgRS512
        - AlgES256
        - AlgES384
    JwkKeyOperation:
      type: string
      enum:
        - sign
        - verify
        - encrypt
        - decrypt
        - wrapKey
        - unwrapKey
      x-enum-varnames:
        - KeyOpSign
        - KeyOpVerify
        - KeyOpEncrypt
        - KeyOpDecrypt
        - KeyOpWrapKey
        - KeyOpUnwrapKey
      x-go-name: KeyOp
    JwkProperties:
      type: object
      description: Property bag of JSON Web Key (RFC 7517) with additional fields, all bytes are base64url encoded
      properties:
        alg:
          $ref: "#/components/schemas/JwkAlg"
        kty:
          $ref: "#/components/schemas/JwtKty"
        key_size:
          description: RSA key size
          type: integer
          format: int32
        key_ops:
          $ref: "#/components/schemas/JwkKeyOperation"
        n:
          description: RSA modulus
          type: string
        e:
          description: RSA exponent
          type: string
        crv:
          $ref: "#/components/schemas/JwtCrv"
        x:
          description: EC x coordinate
          type: string
        y:
          description: EC y coordinate
          type: string
        kid:
          description: Key ID
          type: string
          x-go-name: KeyID
        x5u:
          x-go-name: CertificateURL
          description: X.509 certificate URL
          type: string
        x5c:
          description: X.509 certificate chain
          type: array
          items:
            type: string
          x-go-name: CertificateChain
          x-go-type-skip-optional-pointer: true
        x5t:
          description: X.509 certificate SHA-1 thumbprint
          type: string
          x-go-name: CertificateThumbprint
        x5t#S256:
          description: X.509 certificate SHA-256 thumbprint
          type: string
          x-go-name: CertificateThumbprintSHA256
      required:
        - kty
    JwtCrv:
      type: string
      enum:
        - P-256
        - P-384
      x-enum-varnames:
        - CurveNameP256
        - CurveNameP384
    JwtKty:
      type: string
      enum:
        - RSA
        - EC
      x-enum-varnames:
        - KeyTypeRSA
        - KeyTypeEC
    KeyVaultRoleAssignment:
      type: object
      properties:
        id:
          type: string
        roleDefinitionId:
          type: string
        principalId:
          type: string
      required:
        - id
        - roleDefinitionId
        - principalId
    CertificateUsage:
      type: string
      enum:
        - ca
        - caRoot
        - serverAuth
        - clientAuth
      x-enum-varnames:
        - CertUsageCA
        - CertUsageCARoot
        - CertUsageServerAuth
        - CertUsageClientAuth
    CertificateLifetimeTrigger:
      type: object
      properties:
        days_before_expiry:
          x-go-name: DaysBeforeExpiry
          type: integer
          format: int32
        lifetime_percentage:
          x-go-name: LifetimePercentage
          type: integer
          format: int32
    CertificateTemplateRefFields:
      type: object
      properties:
        subjectCommonName:
          description: Common name
          type: string
      required:
        - subjectCommonName
    CertificateTemplateRef:
      allOf:
        - $ref: "#/components/schemas/ResourceRef"
        - $ref: "#/components/schemas/CertificateTemplateRefFields"
    CertificateTemplateParameters:
      type: object
      description: Certificate fields, may accept template substitutions
      properties:
        issuerTemplate:
          $ref: "#/components/schemas/ResourceLocator"
        keyProperties:
          $ref: "#/components/schemas/JwkProperties"
        subjectCommonName:
          description: Common name
          type: string
        usages:
          type: array
          items:
            $ref: "#/components/schemas/CertificateUsage"
        validity_months:
          x-go-name: ValidityInMonths
          type: integer
          format: int32
          minimum: 1
          maximum: 120
        keyStorePath:
          type: string
        lifetimeTrigger:
          $ref: "#/components/schemas/CertificateLifetimeTrigger"
      required:
        - subjectCommonName
        - usages
    CertificateTemplateFields:
      type: object
      description: Certificate fields, may accept template substitutions
      properties:
        issuerTemplate:
          $ref: "#/components/schemas/ResourceLocator"
        keyProperties:
          $ref: "#/components/schemas/JwkProperties"
        usages:
          type: array
          items:
            $ref: "#/components/schemas/CertificateUsage"
        validity_months:
          x-go-name: ValidityInMonths
          type: integer
          format: int32
          minimum: 1
          maximum: 120
        keyStorePath:
          type: string
        lifetimeTrigger:
          $ref: "#/components/schemas/CertificateLifetimeTrigger"
      required:
        - issuerTemplate
        - keyProperties
        - usages
        - validity_months
        - lifetimeTrigger
    CertificateTemplate:
      allOf:
        - $ref: "#/components/schemas/CertificateTemplateRef"
        - $ref: "#/components/schemas/CertificateTemplateFields"
    IncludeCertificate:
      type: string
      enum:
        - jwk
        - pem
      x-enum-varnames:
        - IncludeJWK
        - IncludePEM
    CertificateRefFields:
      type: object
      properties:
        thumbprint:
          description: X.509 certificate SHA-1 thumbprint
          type: string
        subjectCommonName:
          description: Common name
          type: string
        notAfter:
          description: Expiration date of the certificate
          type: string
          format: date-time
        template:
          $ref: "#/components/schemas/ResourceLocator"
      required:
        - thumbprint
        - subjectCommonName
        - notAfter
        - template
    CertificateRef:
      allOf:
        - $ref: "#/components/schemas/ResourceRef"
        - $ref: "#/components/schemas/CertificateRefFields"
    CertificateInfoFields:
      type: object
      properties:
        notBefore:
          description: Expiration date of the certificate
          type: string
          format: date-time
        usages:
          type: array
          items:
            $ref: "#/components/schemas/CertificateUsage"
        issuer:
          description: locator for issuer certificate
          $ref: "#/components/schemas/ResourceLocator"
        jwk:
          $ref: "#/components/schemas/JwkProperties"
        pem:
          type: string
      required:
        - notBefore
        - jwk
        - usages
        - issuer
    CertificateInfo:
      allOf:
        - $ref: "#/components/schemas/CertificateRef"
        - $ref: "#/components/schemas/CertificateInfoFields"
    AgentHostRole:
      type: string
      enum:
        - radiusServer
      x-enum-varnames:
        - AgentHostRoleRadiusServer
    AgentCheckInResult:
      type: object
      properties:
        message:
          type: string
    ServiceConfig:
      allOf:
        - $ref: "#/components/schemas/ResourceRef"
        - $ref: "#/components/schemas/ServiceConfigFields"
    ServiceConfigFields:
      type: object
      properties:
        azureSubscriptionId:
          type: string
        keyvaultArmResourceId:
          type: string
        appRoleIds:
          type: object
          title: ServiceConfigAppRoleIds
          properties:
            "App.Admin":
              type: string
              format: uuid
            "Agent.ActiveHost":
              type: string
              format: uuid
          required:
            - "App.Admin"
            - "Agent.ActiveHost"
        azureContainerRegistry:
          title: ServiceConfigAcrInfo
          type: object
          properties:
            loginServer:
              type: string
            name:
              type: string
            armResourceId:
              type: string
          required:
            - loginServer
            - name
            - armResourceId
      required:
        - azureSubscriptionId
        - keyvaultArmResourceId
        - appRoleIds
        - azureContainerRegistry
  parameters:
    NamespaceKindParameter:
      in: path
      name: namespaceKind
      schema:
        $ref: "#/components/schemas/NamespaceKind"
      required: true
    NamespaceIdParameter:
      in: path
      name: namespaceId
      schema:
        $ref: "#/components/schemas/Identifier"
      required: true
    CertificateIdPathParameter:
      in: path
      name: certificateId
      schema:
        $ref: "#/components/schemas/Identifier"
      required: true
    ProfileIdentifierParameter:
      in: path
      name: profileId
      schema:
        $ref: "#/components/schemas/Identifier"
      required: true
    CertificateTemplateIdentifierParameter:
      in: path
      name: templateId
      schema:
        $ref: "#/components/schemas/Identifier"
      required: true
    IncludeCertificateParameter:
      in: query
      name: "includeCertificate"
      schema:
        $ref: "#/components/schemas/IncludeCertificate"
  responses:
    CertificateResponse:
      description: CertificateResponse
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CertificateInfo"
