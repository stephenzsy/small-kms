openapi: 3.0.3
info:
  title: Small KMS Admin API
  version: 0.1.0
servers:
  - url: http://localhost:9000
    description: Local server
paths:
  /admin/certificates/{category}:
    get:
      tags:
        - admin
      summary: List certificates
      operationId: ListCertificates
      parameters:
        - $ref: "#/components/parameters/MsClientPrincipalName"
        - $ref: "#/components/parameters/MsClientPrincipalId"
        - $ref: "#/components/parameters/MsClientRoles"
        - in: path
          name: category
          schema:
            $ref: "#/components/schemas/CertificateCategory"
          required: true
      responses:
        "200":
          description: A JSON array of Certificate Refs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateRefs"
  /admin/certificate/{id}/download:
    get:
      tags:
        - admin
      summary: Download certificate
      operationId: Download certificate
      parameters:
        - $ref: "#/components/parameters/MsClientPrincipalName"
        - $ref: "#/components/parameters/MsClientPrincipalId"
        - $ref: "#/components/parameters/MsClientRoles"
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: query
          name: format
          schema:
            $ref: "#/components/schemas/CertificateFileFormat"
          required: false
      responses:
        "200":
          description: A JSON array of Certificate Refs
          content:
            application/x-pem-file:
              schema:
                type: string
                format: binary
            application/x-x509-ca-cert:
              schema:
                type: string
                format: binary
  /admin/certificate:
    post:
      tags:
        - admin
      summary: Create certificate
      operationId: CreateCertificate
      parameters:
        - $ref: "#/components/parameters/MsClientPrincipalName"
        - $ref: "#/components/parameters/MsClientPrincipalId"
        - $ref: "#/components/parameters/MsClientRoles"
        - in: query
          name: force
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCertificateParameters"
      responses:
        "200":
          description: Certificate metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateRef"
components:
  parameters:
    MsClientPrincipalName:
      in: header
      name: X-Ms-Client-Principal-Name
      schema:
        type: string
      required: true
    MsClientPrincipalId:
      in: header
      name: X-Ms-Client-Principal-Id
      schema:
        type: string
      required: true
    MsClientRoles:
      in: header
      name: X-Ms-Client-Roles
      schema:
        type: string
      required: true
  schemas:
    CertificateFileFormat:
      type: string
      enum:
        - pem
        - der
    CertificateRefs:
      type: array
      items:
        $ref: "#/components/schemas/CertificateRef"
    CertificateSubject:
      type: object
      properties:
        commonName:
          type: string
        organizationUnit:
          type: string
        organization:
          type: string
        country:
          type: string
      required:
        - commonName
    CertificateRef:
      type: object
      properties:
        id:
          description: Unique ID of the certificate
          type: string
          format: uuid
          x-go-name: ID
        commonName:
          type: string
        serialNumber:
          type: string
          format: hex
        enabled:
          type: boolean
        notBefore:
          type: string
          format: date-time
        notAfter:
          type: string
          format: date-time
        issuerId:
          type: string
          format: uuid
          x-go-name: IssuerID
      required:
        - id
        - commonName
        - serialNumber
        - notBefore
        - notAfter
        - issuerId
    CreateCertificateOptions:
      type: object
      properties:
        newKeyName:
          type: boolean
        keepKeyVersion:
          type: boolean
    CertificateCategory:
      type: string
      enum:
        - root-ca
        - intermediate-ca
        - server
        - client
    CreateCertificateParameters:
      type: object
      properties:
        category:
          $ref: "#/components/schemas/CertificateCategory"
        name:
          type: string
        subject:
          $ref: "#/components/schemas/CertificateSubject"
        validity:
          type: string
          format: duration
        kty:
          type: string
          enum:
            - RSA
            - EC
        size:
          type: integer
          format: int32
          enum:
            - 2048
            - 3072
            - 4096
        curve:
          type: string
          enum:
            - P-256
            - P-384
        issuer:
          type: string
          format: uuid
          x-go-name: IssuerID
        options:
          $ref: "#/components/schemas/CreateCertificateOptions"
      required:
        - category
        - name
        - subject
