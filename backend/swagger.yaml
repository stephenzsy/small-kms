openapi: 3.0.3
info:
  title: Small KMS Admin API
  version: 0.1.0
servers:
  - url: http://localhost:9000
    description: Local server
paths:
  /v1/{namespaceId}/certificates:
    get:
      tags:
        - certs
      summary: List certificates
      operationId: ListCertificatesV1
      parameters:
        - in: path
          name: namespaceId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        "200":
          description: A JSON array of Certificate Refs
          content:
            application/json:
              schema:
                title: ListCertificatesResponse
                type: array
                items:
                  $ref: "#/components/schemas/CertificateRef"
    post:
      tags:
        - certs
      summary: Create certificate
      operationId: CreateCertificateV1
      parameters:
        - in: path
          name: namespaceId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCertificateParameters"
        required: true
      responses:
        "201":
          description: Certificate Reference
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateRef"
  /v1/{namespaceId}/certificates/{id}:
    get:
      tags:
        - certs
      summary: Get certificate
      operationId: GetCertificateV1
      parameters:
        - in: path
          name: namespaceId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: header
          name: Accept
          schema:
            type: string
            enum:
              - application/json
              - application/x-pem-file
              - application/x-x509-ca-cert
            x-enum-varnames:
              - Accept_Json
              - Accept_Pem
              - Accept_X509CaCert
      responses:
        "200":
          description: Get certificate response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateRef"
            application/x-pem-file:
              schema:
                type: string
                format: binary
            application/x-x509-ca-cert:
              schema:
                type: string
                format: binary
  /v1/{namespaceId}/policies/{policyId}:
    put:
      tags:
        - policy
      summary: Put Policy
      operationId: PutPolicyV1
      parameters:
        - in: path
          name: namespaceId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: policyId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyParameters"
        required: true
      responses:
        "200":
          description: Certificate policy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
    get:
      tags:
        - policy
      summary: Get Certificate Policy
      operationId: GetPolicyV1
      parameters:
        - in: path
          name: namespaceId
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: policyId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        "200":
          description: Certificate policy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    CertificateSubject:
      type: object
      properties:
        cn:
          description: Common name
          type: string
          x-go-name: CN
        ou:
          description: Organizational unit
          type: string
          x-go-name: OU
        o:
          description: Organization
          type: string
        c:
          description: Country or region
          type: string
      required:
        - cn
    CreateCertificateOptions:
      type: object
      properties:
        newKeyName:
          description: Create new key name instead of a new version if exists
          type: boolean
        keepKeyVersion:
          description: Keep using the same key version if exists
          type: boolean
    KeyParameters:
      type: object
      properties:
        kty:
          type: string
          enum:
            - RSA
            - EC
          x-enum-varnames:
            - Kty_RSA
            - Kty_EC
        size:
          type: integer
          format: int32
          enum:
            - 2048
            - 3072
            - 4096
          x-enum-varnames:
            - KeySize_2048
            - KeySize_3072
            - KeySize_4096
        curve:
          type: string
          enum:
            - P-256
            - P-384
          x-enum-varnames:
            - EcCurve_P256
            - EcCurve_P384
      required:
        - kty
    CreateCertificateParameters:
      type: object
      properties:
        usage:
          $ref: "#/components/schemas/CertificateUsage"
        subject:
          $ref: "#/components/schemas/CertificateSubject"
        validity:
          type: string
          format: duration
        issuerNamespace:
          description: Issuer of the certificate
          type: string
          format: uuid
        issuer:
          description: Issuer of the certificate
          type: string
          format: uuid
        options:
          $ref: "#/components/schemas/CreateCertificateOptions"
      required:
        - usage
        - name
        - subject
        - issuerNamespace
        - issuer
    CertificateUsage:
      type: string
      enum:
        - root-ca
        - intermediate-ca
        - server
        - client
      x-enum-varnames:
        - Usage_RootCA
        - Usage_IntCA
        - Usage_Server
        - Usage_Client
    CertificateRef:
      type: object
      properties:
        namespaceId:
          description: Unique ID of the namespace
          type: string
          format: uuid
          x-go-name: NamespaceID
        id:
          description: Unique ID of the certificate, also the serial number of the certificate
          type: string
          format: uuid
          x-go-name: ID
        name:
          description: Name of the certificate, also the common name (CN) of the certificate
          type: string
        usage:
          $ref: "#/components/schemas/CertificateUsage"
        notAfter:
          description: Expiration date of the certificate
          type: string
          format: date-time
        issuerNamespace:
          description: Issuer of the certificate
          type: string
          format: uuid
        issuer:
          description: Issuer of the certificate
          type: string
          format: uuid
        createdBy:
          description: Unique ID of the user who created the certificate
          type: string
      required:
        - namespaceId
        - id
        - name
        - usage
        - notAfter
        - issuerNamespace
        - issuer
        - createdBy
    PolicyType:
      type: string
      enum:
        - certIssue
        - certRequest
      x-enum-varnames:
        - PolicyType_CertIssue
        - PolicyType_CertRequest
    PolicyRef:
      type: object
      properties:
        namespaceId:
          description: Unique ID of the namespace
          type: string
          format: uuid
          x-go-name: NamespaceID
        id:
          type: string
          format: uuid
          x-go-name: ID
        type:
          $ref: "#/components/schemas/PolicyType"
        updatedBy:
          description: Unique ID of the user who created the policy
          type: string
        updatedAt:
          description: Time when the policy was last updated
          type: string
          format: date-time
      required:
        - namespaceId
        - id
        - type
        - updatedBy
        - updatedAt
    CertificateIssurancePolicyParameters:
      type: object
      properties:
        issuerId:
          description: ID of the current issuer certificate
          type: string
          format: uuid
          x-go-name: IssuerID
        maxValidity:
          $ref: "#/components/schemas/DurationSpec"
        allowedKeyTypes:
          type: array
          items:
            $ref: "#/components/schemas/KeyParameters"
        allowedUsages:
          type: array
          items:
            $ref: "#/components/schemas/CertificateUsage"
        allowedNamespaceIds:
          type: array
          items:
            type: string
            format: uuid
          x-go-name: AllowedNamespaceIDs
      required:
        - issuerId
        - maxValidity
        - allowedKeyTypes
        - allowedUsages
        - allowedNamespaceIds
    DurationSpec:
      type: object
      properties:
        years:
          type: integer
          format: int32
          default: 0
        months:
          type: integer
          format: int32
          default: 0
        days:
          type: integer
          format: int32
          default: 0
      required:
        - years
        - months
        - days
    CertificateRequestPolicyParameters:
      type: object
      properties:
        issuerNamespaceId:
          description: ID of the issuer namespace
          type: string
          format: uuid
          x-go-name: IssuerNamespaceID
        validity:
          $ref: "#/components/schemas/DurationSpec"
        keyParameters:
          $ref: "#/components/schemas/KeyParameters"
        subject:
          $ref: "#/components/schemas/CertificateSubject"
        usage:
          $ref: "#/components/schemas/CertificateUsage"
        autoRenewalThreshold:
          description: Number of days left to trigger renewal, (0, 1) range indicates percentage
          type: number
          format: float
          default: 0.2
      required:
        - issuerNamespaceId
        - validity
        - subject
        - usage
    PolicyParameters:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/PolicyType"
        certIssue:
          $ref: "#/components/schemas/CertificateIssurancePolicyParameters"
        certRequest:
          $ref: "#/components/schemas/CertificateRequestPolicyParameters"
      required:
        - type
    Policy:
      allOf:
        - $ref: "#/components/schemas/PolicyRef"
        - $ref: "#/components/schemas/PolicyParameters"
    WellKnownNamespaceId:
      type: string
      enum:
        - 00000000-0000-0000-0000-000000000001 # root-ca
        - 00000000-0000-0000-0000-000000000010 # int-ca infrastructure (reserved)
        - 00000000-0000-0000-0000-000000000011 # int-ca internal service (e.g. mTLS)
        - 00000000-0000-0000-0000-100000000001 # int-ca intranet access
        - 00000000-0000-0000-0001-000000000010 # certs infrastructure
        - 00000000-0000-0000-0001-000000000011 # certs internal service
      x-enum-varnames:
        - WellKnownNamespaceIDStr_RootCA
        - WellKnownNamespaceIDStr_IntCAInfra
        - WellKnownNamespaceIDStr_IntCAService
        - WellKnownNamespaceIDStr_IntCAIntranet
        - WellKnownNamespaceIDStr_CertsInfra
        - WellKnownNamespaceIDStr_CertsService
      x-go-name: WellKnownNamespaceIDStr
    TestNamespaceId:
      type: string
      enum:
        - 00000001-0000-0000-0000-000000000001 # root-ca test
        - 00000001-0000-0000-0000-100000000001 # int-ca test
      x-enum-varnames:
        - TestNamespaceIDStr_RootCA
