/*
 * Small KMS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"os"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	"github.com/stephenzsy/small-kms/backend/admin"
	"github.com/stephenzsy/small-kms/backend/auth"
	"github.com/stephenzsy/small-kms/backend/common"
)

func main() {
	log.Println("Server started")

	serverConfig := common.NewServerConfig()
	log.Printf("Server role: %s", serverConfig.GetServerRole())
	router := gin.Default()

	if os.Getenv("ENABLE_CORS") == "true" {
		router.Use(auth.HandleAadAuthMiddleware)
		corsConfig := cors.DefaultConfig()
		corsConfig.AllowAllOrigins = true
		corsConfig.AllowHeaders = append(corsConfig.AllowHeaders, "X-Ms-Client-Principal", "X-Ms-Client-Principal-Id")
		corsConfig.AllowCredentials = true
		router.Use(cors.New(corsConfig))
	}

	switch serverConfig.GetServerRole() {
	case common.ServerRoleAdmin:
		admin.RegisterHandlers(router, admin.NewAdminServer(&serverConfig))
	}

	listenerAddress := os.Getenv("LISTENER_ADDRESS")
	if len(listenerAddress) == 0 {
		listenerAddress = ":9000"
	}

	log.Fatal(router.Run(listenerAddress))
}
