/*
 * Small KMS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"fmt"
	"log"

	"github.com/gin-gonic/gin"
	"github.com/stephenzsy/small-kms/backend/admin"
	"github.com/stephenzsy/small-kms/backend/common"
)

func main() {
	log.Println("Server started")

	serverConfig := common.NewServerConfig()
	log.Printf("Server role: %s", serverConfig.GetServerRole())
	router := gin.Default()

	handleAadAuth := func(c *gin.Context) {
		// Intercept the headers here
		authedPrincipalId := c.Request.Header.Get("X-Ms-Client-Principal-Id")
		if !serverConfig.IsPrincipalIdTrusted(authedPrincipalId) {
			log.Printf("Principal ID is not trusted: %s", authedPrincipalId)
			c.JSON(403, gin.H{"error": fmt.Sprintf("Principal ID is not trusted: %s", authedPrincipalId)})
			c.Abort()
			return
		}

		c.Next()
	}

	router.Use(handleAadAuth)

	switch serverConfig.GetServerRole() {
	case common.ServerRoleAdmin:
		admin.RegisterHandlers(router, admin.NewAdminServer(&serverConfig))
	}

	log.Fatal(router.Run(":9000"))
}
