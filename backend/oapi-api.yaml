openapi: 3.0.3
info:
  title: Small KMS Admin API
  version: 0.1.1
servers:
  - url: https://example.com
    description: Local server
security:
  - BearerAuth: []
paths:
  /v3/application/{namespaceId}/agent:
    parameters:
      - $ref: "#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - admin
      summary: Provision agent
      operationId: GetAgentProfile
      responses:
        200:
          description: Agent Profile
          content:
            application/json:
              schema:
                $ref: "oapi-shared.yaml#/components/schemas/AgentProfile"
  /v3/{namespaceKind}/{namespaceId}/agent-callback/{configName}:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
      - $ref: "#/components/parameters/NamespaceIdParameter"
      - $ref: "#/components/parameters/AgentConfigNameParameter"
    post:
      tags:
        - admin
        - agentclient
      operationId: AgentCallback
      requestBody:
        content:
          application/json:
            schema:
              $ref: "oapi-shared.yaml#/components/schemas/AgentConfiguration"
        required: true
      responses:
        204:
          description: No content
  /v3/{namespaceKind}/{namespaceId}/agent-config/{configName}:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
      - $ref: "#/components/parameters/NamespaceIdParameter"
      - $ref: "#/components/parameters/AgentConfigNameParameter"
    get:
      tags:
        - admin
        - agentclient
      summary: Get agent autoconfig
      operationId: GetAgentConfiguration
      parameters:
        - in: header
          name: "X-Smallkms-If-Version-Not-Match"
          schema:
            type: string
          required: false
        - in: query
          name: refreshToken
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/AgentConfigurationResponse"
        204:
          description: No content
    put:
      tags:
        - admin
      summary: Get agent autoconfig
      operationId: PutAgentConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "oapi-shared.yaml#/components/schemas/AgentConfigurationParameters"
        required: true
      responses:
        200:
          $ref: "#/components/responses/AgentConfigurationResponse"
  /v3/servicePrincipal/{namespaceId}/agent-proxy:
    parameters:
      - $ref: "#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - admin
      description: Get agent proxy information
      operationId: GetAgentProxyInfo
      responses:
        200:
          description: Agent proxy info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentProxyInfo"
  /v3/servicePrincipal/{namespaceId}/agent-proxy/docker/info:
    parameters:
      - $ref: "#/components/parameters/NamespaceIdParameter"
    get:
      tags:
        - agent
        - admin
        - agentproxyclient
      description: Get docker info
      operationId: GetDockerInfo
      responses:
        200:
          description: DockerInfo
          content:
            application/json:
              schema:
                $ref: "oapi-shared.yaml#/components/schemas/DockerInfo"
  /v3/{namespaceKind}/{namespaceId}/certificate-template/{templateId}/keyvault-role-assignments:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
      - $ref: "#/components/parameters/NamespaceIdParameter"
      - $ref: "#/components/parameters/CertificateTemplateIdentifierParameter"
    get:
      tags:
        - admin
      summary: List Key Vault role assignments
      operationId: ListKeyVaultRoleAssignments
      responses:
        200:
          description: List keyvault roles assignments response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AzureRoleAssignment"
    post:
      tags:
        - admin
      summary: Add Key Vault role assignment
      operationId: AddKeyVaultRoleAssignment
      parameters:
        - in: query
          name: roleDefinitionId
          schema:
            type: string
          required: true
      responses:
        200:
          description: Role Assignment response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AzureRoleAssignment"
  /v3/{namespaceKind}/{namespaceId}/certificate-template/{templateId}/keyvault-role-assignments/{roleAssignmentId}:
    parameters:
      - $ref: "#/components/parameters/NamespaceKindParameter"
      - $ref: "#/components/parameters/NamespaceIdParameter"
      - $ref: "#/components/parameters/CertificateTemplateIdentifierParameter"
      - in: path
        name: roleAssignmentId
        schema:
          type: string
        required: true
    delete:
      tags:
        - admin
      summary: Remove Key Vault role assignment
      operationId: RemoveKeyVaultRoleAssignment
      responses:
        204:
          description: List keyvault roles assignments response
          content: {}
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AgentProxyEndpoint:
      type: object
      properties:
        url:
          type: string
        ipUrl:
          type: string
        state:
          $ref: "oapi-shared.yaml#/components/schemas/AgentConfigurationAgentActiveServerReplyState"
      required:
        - url
        - ipUrl
        - state
    AgentProxyInfo:
      type: object
      properties:
        primary:
          $ref: "#/components/schemas/AgentProxyEndpoint"
        secondary:
          $ref: "#/components/schemas/AgentProxyEndpoint"
    AzureRoleAssignment:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        roleDefinitionId:
          type: string
        principalId:
          type: string
    CertificateLifetimeTrigger:
      type: object
      properties:
        days_before_expiry:
          x-go-name: DaysBeforeExpiry
          type: integer
          format: int32
        lifetime_percentage:
          x-go-name: LifetimePercentage
          type: integer
          format: int32
    CertificateTemplateRefFields:
      type: object
      properties:
        subjectCommonName:
          description: Common name
          type: string
        linkTo:
          $ref: "oapi-shared.yaml#/components/schemas/ResourceLocator"
      required:
        - subjectCommonName
    CertificateTemplateRef:
      allOf:
        - $ref: "oapi-shared.yaml#/components/schemas/ResourceRef"
        - $ref: "#/components/schemas/CertificateTemplateRefFields"
    CertificateTemplateParameters:
      type: object
      description: Certificate fields, may accept template substitutions
      properties:
        issuerTemplate:
          $ref: "oapi-shared.yaml#/components/schemas/ResourceLocator"
        keyProperties:
          $ref: "oapi-shared.yaml#/components/schemas/JwkProperties"
        subjectCommonName:
          description: Common name
          type: string
        subjectAlternativeNames:
          $ref: "oapi-shared.yaml#/components/schemas/SubjectAlternativeNames"
        usages:
          type: array
          items:
            $ref: "oapi-shared.yaml#/components/schemas/CertificateUsage"
        validity_months:
          x-go-name: ValidityInMonths
          type: integer
          format: int32
          minimum: 1
          maximum: 120
        keyStorePath:
          type: string
        keyExportable:
          type: boolean
        lifetimeTrigger:
          $ref: "#/components/schemas/CertificateLifetimeTrigger"
      required:
        - subjectCommonName
        - usages
    CertificateTemplateFields:
      type: object
      description: Certificate fields, may accept template substitutions
      properties:
        issuerTemplate:
          $ref: "oapi-shared.yaml#/components/schemas/ResourceLocator"
        keyProperties:
          $ref: "oapi-shared.yaml#/components/schemas/JwkProperties"
        subjectAlternativeNames:
          $ref: "oapi-shared.yaml#/components/schemas/SubjectAlternativeNames"
        usages:
          type: array
          items:
            $ref: "oapi-shared.yaml#/components/schemas/CertificateUsage"
        validity_months:
          x-go-name: ValidityInMonths
          type: integer
          format: int32
          minimum: 1
          maximum: 120
        keyStorePath:
          type: string
        lifetimeTrigger:
          $ref: "#/components/schemas/CertificateLifetimeTrigger"
      required:
        - issuerTemplate
        - keyProperties
        - usages
        - validity_months
        - lifetimeTrigger
    CertificateTemplate:
      allOf:
        - $ref: "#/components/schemas/CertificateTemplateRef"
        - $ref: "#/components/schemas/CertificateTemplateFields"
    LinkedCertificateTemplateUsage:
      type: string
      enum:
        - cliant-authorization
      x-enum-varnames:
        - LinkedCertificateTemplateUsageClientAuthorization
    CreateLinkedCertificateTemplateParameters:
      type: object
      properties:
        targetTemplate:
          $ref: "oapi-shared.yaml#/components/schemas/ResourceLocator"
        usage:
          $ref: "#/components/schemas/LinkedCertificateTemplateUsage"
      required:
        - targetTemplate
        - usage
    AgentHostRole:
      type: string
      enum:
        - radiusServer
      x-enum-varnames:
        - AgentHostRoleRadiusServer
  parameters:
    AgentConfigNameParameter:
      in: path
      name: configName
      schema:
        $ref: "oapi-shared.yaml#/components/schemas/AgentConfigName"
      required: true
    NamespaceKindParameter:
      in: path
      name: namespaceKind
      schema:
        $ref: "oapi-shared.yaml#/components/schemas/NamespaceKind"
      required: true
    NamespaceIdParameter:
      in: path
      name: namespaceId
      schema:
        $ref: "oapi-shared.yaml#/components/schemas/Identifier"
      required: true
    CertificateIdPathParameter:
      in: path
      name: certificateId
      schema:
        $ref: "oapi-shared.yaml#/components/schemas/Identifier"
      required: true
    CertificateTemplateIdentifierParameter:
      in: path
      name: templateId
      schema:
        $ref: "oapi-shared.yaml#/components/schemas/Identifier"
      required: true
    IncludeCertificateParameter:
      in: query
      name: "includeCertificate"
      schema:
        type: boolean
      required: false
  responses:
    AgentConfigurationResponse:
      description: Agent autoconfig response
      content:
        application/json:
          schema:
            $ref: "oapi-shared.yaml#/components/schemas/AgentConfiguration"
    CertificateResponse:
      description: CertificateResponse
      content:
        application/json:
          schema:
            $ref: "oapi-shared.yaml#/components/schemas/CertificateInfo"
